#
# CaMKIIs.py
#
# Python file for the vector field named: CaMKIIs
#

"""
This module implements the vector field name "CaMKIIs" as
the function vectorfield().  The Jacobian of the vector field
is computed by jacobian().  These functions can be used with
the SciPy odeint function.
This module also defines the functions MolCaPerMolCaM(), AutoCamkiiPercentage(), MolCaMPerMolPP2B() and ActivePP2BPercentage().

For example:

    from scipy.integrate import odeint
    import CaMKIIs

    params = [kf__CaM__Ca,kf__CaM_Ca1__Ca,kf__CaM_Ca2__Ca,kf__CaM_Ca3__Ca,kf__CaM__PP2B,kf__CaM_Ca1__PP2B,kf__CaM_Ca2__PP2B,kf__CaM_Ca3__PP2B,kf__CaM_Ca4__PP2B,kf__PP2B_CaM__Ca,kf__PP2B_CaM_Ca1__Ca,kf__PP2B_CaM_Ca2__Ca,kf__PP2B_CaM_Ca3__Ca,KD__CaM_Ca3__Ca,KD__CaM_Ca2__Ca,KD__CaM_Ca1__Ca,KD__CaM__Ca,KD__CaM_Ca4__PP2B,KD__PP2B_CaM_Ca3__Ca,KD__PP2B_CaM_Ca2__Ca,KD__PP2B_CaM_Ca1__Ca,KD__PP2B_CaM__Ca,kf__CaM__CaMKII,kf__CaMKII_CaM_Ca3__Ca,kf__CaMKII_CaM_Ca2__Ca,kf__CaMKII_CaM_Ca1__Ca,kf__CaMKII_CaM__Ca,kf__CaM_Ca1__CaMKII,kf__CaM_Ca2__CaMKII,kf__CaM_Ca3__CaMKII,kf__CaM_Ca4__CaMKII,KD__CaM_Ca4__CaMKII,KD__CaMKII_CaM_Ca3__Ca,KD__CaMKII_CaM_Ca2__Ca,KD__CaMKII_CaM_Ca1__Ca,KD__CaMKII_CaM__Ca,kf__pCaMKII_Ca3__Ca,kf__CaM__pCaMKIIaut,kf__CaM_Ca1__pCaMKIIaut,kf__CaM_Ca2__pCaMKIIaut,kf__CaM_Ca3__pCaMKIIaut,kf__pCaMKII_Ca2__Ca,kf__pCaMKII_Ca1__Ca,kf__CaM_Ca4__pCaMKIIaut,kf__pCaMKII_Ca0__Ca,KD__pCaMKII_Ca3__Ca,KD__pCaMKII_Ca2__Ca,KD__pCaMKII_Ca1__Ca,KD__pCaMKII_Ca0__Ca,KD__CaM_Ca4__pCaMKIIaut,kp__pairedCaMKIIc__CaMKIIc,kf__PP1__pCaMKIIaut,kr__PP1__pCaMKIIaut,kcat__PP1__pCaMKIIaut,Ca_set,PP1_0,CaMKII_0,CaM_0,PP2B_0]   # Assume the parameters have been set elsewhere
    t = [i/10.0 for i in range(0,101)]
    ic = [1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
    sol = odeint(CaMKIIs.vectorfield,ic,t,args=(params,),Dfun=CaMKIIs.jacobian)

This file was generated by the program VFGEN (Version:2.4.1)
Generated on 16-Oct-2017 at 19:28

"""

from math import *
import numpy

#
# The vector field.
#

def vectorfield(y_,t_,p_):
    """
    The vector field function for the vector field "CaMKIIs"
    Arguments:
        y_ :  vector of the state variables:
                  y_[0] is CaM_Ca1
                  y_[1] is CaM_Ca2
                  y_[2] is CaM_Ca3
                  y_[3] is CaM_Ca4
                  y_[4] is PP2B_CaM
                  y_[5] is PP2B_CaM_Ca1
                  y_[6] is PP2B_CaM_Ca2
                  y_[7] is PP2B_CaM_Ca3
                  y_[8] is PP2Bc
                  y_[9] is CaMKII_CaM
                  y_[10] is CaMKII_CaM_Ca1
                  y_[11] is CaMKII_CaM_Ca2
                  y_[12] is CaMKII_CaM_Ca3
                  y_[13] is CaMKIIc
                  y_[14] is pCaMKII
                  y_[15] is pCaMKIIaut
                  y_[16] is pCaMKII_Ca3
                  y_[17] is pCaMKII_Ca2
                  y_[18] is pCaMKII_Ca1
                  y_[19] is pCaMKII_Ca0
                  y_[20] is PP1__pCaMKIIaut
        t_ :  time
        p_ :  vector of the parameters
                  p_[0] is kf__CaM__Ca
                  p_[1] is kf__CaM_Ca1__Ca
                  p_[2] is kf__CaM_Ca2__Ca
                  p_[3] is kf__CaM_Ca3__Ca
                  p_[4] is kf__CaM__PP2B
                  p_[5] is kf__CaM_Ca1__PP2B
                  p_[6] is kf__CaM_Ca2__PP2B
                  p_[7] is kf__CaM_Ca3__PP2B
                  p_[8] is kf__CaM_Ca4__PP2B
                  p_[9] is kf__PP2B_CaM__Ca
                  p_[10] is kf__PP2B_CaM_Ca1__Ca
                  p_[11] is kf__PP2B_CaM_Ca2__Ca
                  p_[12] is kf__PP2B_CaM_Ca3__Ca
                  p_[13] is KD__CaM_Ca3__Ca
                  p_[14] is KD__CaM_Ca2__Ca
                  p_[15] is KD__CaM_Ca1__Ca
                  p_[16] is KD__CaM__Ca
                  p_[17] is KD__CaM_Ca4__PP2B
                  p_[18] is KD__PP2B_CaM_Ca3__Ca
                  p_[19] is KD__PP2B_CaM_Ca2__Ca
                  p_[20] is KD__PP2B_CaM_Ca1__Ca
                  p_[21] is KD__PP2B_CaM__Ca
                  p_[22] is kf__CaM__CaMKII
                  p_[23] is kf__CaMKII_CaM_Ca3__Ca
                  p_[24] is kf__CaMKII_CaM_Ca2__Ca
                  p_[25] is kf__CaMKII_CaM_Ca1__Ca
                  p_[26] is kf__CaMKII_CaM__Ca
                  p_[27] is kf__CaM_Ca1__CaMKII
                  p_[28] is kf__CaM_Ca2__CaMKII
                  p_[29] is kf__CaM_Ca3__CaMKII
                  p_[30] is kf__CaM_Ca4__CaMKII
                  p_[31] is KD__CaM_Ca4__CaMKII
                  p_[32] is KD__CaMKII_CaM_Ca3__Ca
                  p_[33] is KD__CaMKII_CaM_Ca2__Ca
                  p_[34] is KD__CaMKII_CaM_Ca1__Ca
                  p_[35] is KD__CaMKII_CaM__Ca
                  p_[36] is kf__pCaMKII_Ca3__Ca
                  p_[37] is kf__CaM__pCaMKIIaut
                  p_[38] is kf__CaM_Ca1__pCaMKIIaut
                  p_[39] is kf__CaM_Ca2__pCaMKIIaut
                  p_[40] is kf__CaM_Ca3__pCaMKIIaut
                  p_[41] is kf__pCaMKII_Ca2__Ca
                  p_[42] is kf__pCaMKII_Ca1__Ca
                  p_[43] is kf__CaM_Ca4__pCaMKIIaut
                  p_[44] is kf__pCaMKII_Ca0__Ca
                  p_[45] is KD__pCaMKII_Ca3__Ca
                  p_[46] is KD__pCaMKII_Ca2__Ca
                  p_[47] is KD__pCaMKII_Ca1__Ca
                  p_[48] is KD__pCaMKII_Ca0__Ca
                  p_[49] is KD__CaM_Ca4__pCaMKIIaut
                  p_[50] is kp__pairedCaMKIIc__CaMKIIc
                  p_[51] is kf__PP1__pCaMKIIaut
                  p_[52] is kr__PP1__pCaMKIIaut
                  p_[53] is kcat__PP1__pCaMKIIaut
                  p_[54] is Ca_set
                  p_[55] is PP1_0
                  p_[56] is CaMKII_0
                  p_[57] is CaM_0
                  p_[58] is PP2B_0
    """
    s = 1.0000000000000001e-05;
    a = 3.9026399999999999e+00;
    b = 2.8697200000000000e+00;
    CaM_Ca1    = y_[0]
    CaM_Ca2    = y_[1]
    CaM_Ca3    = y_[2]
    CaM_Ca4    = y_[3]
    PP2B_CaM   = y_[4]
    PP2B_CaM_Ca1 = y_[5]
    PP2B_CaM_Ca2 = y_[6]
    PP2B_CaM_Ca3 = y_[7]
    PP2Bc      = y_[8]
    CaMKII_CaM = y_[9]
    CaMKII_CaM_Ca1 = y_[10]
    CaMKII_CaM_Ca2 = y_[11]
    CaMKII_CaM_Ca3 = y_[12]
    CaMKIIc    = y_[13]
    pCaMKII    = y_[14]
    pCaMKIIaut = y_[15]
    pCaMKII_Ca3 = y_[16]
    pCaMKII_Ca2 = y_[17]
    pCaMKII_Ca1 = y_[18]
    pCaMKII_Ca0 = y_[19]
    PP1__pCaMKIIaut = y_[20]

    kf__CaM__Ca = p_[0]
    kf__CaM_Ca1__Ca = p_[1]
    kf__CaM_Ca2__Ca = p_[2]
    kf__CaM_Ca3__Ca = p_[3]
    kf__CaM__PP2B = p_[4]
    kf__CaM_Ca1__PP2B = p_[5]
    kf__CaM_Ca2__PP2B = p_[6]
    kf__CaM_Ca3__PP2B = p_[7]
    kf__CaM_Ca4__PP2B = p_[8]
    kf__PP2B_CaM__Ca = p_[9]
    kf__PP2B_CaM_Ca1__Ca = p_[10]
    kf__PP2B_CaM_Ca2__Ca = p_[11]
    kf__PP2B_CaM_Ca3__Ca = p_[12]
    KD__CaM_Ca3__Ca = p_[13]
    KD__CaM_Ca2__Ca = p_[14]
    KD__CaM_Ca1__Ca = p_[15]
    KD__CaM__Ca = p_[16]
    KD__CaM_Ca4__PP2B = p_[17]
    KD__PP2B_CaM_Ca3__Ca = p_[18]
    KD__PP2B_CaM_Ca2__Ca = p_[19]
    KD__PP2B_CaM_Ca1__Ca = p_[20]
    KD__PP2B_CaM__Ca = p_[21]
    kf__CaM__CaMKII = p_[22]
    kf__CaMKII_CaM_Ca3__Ca = p_[23]
    kf__CaMKII_CaM_Ca2__Ca = p_[24]
    kf__CaMKII_CaM_Ca1__Ca = p_[25]
    kf__CaMKII_CaM__Ca = p_[26]
    kf__CaM_Ca1__CaMKII = p_[27]
    kf__CaM_Ca2__CaMKII = p_[28]
    kf__CaM_Ca3__CaMKII = p_[29]
    kf__CaM_Ca4__CaMKII = p_[30]
    KD__CaM_Ca4__CaMKII = p_[31]
    KD__CaMKII_CaM_Ca3__Ca = p_[32]
    KD__CaMKII_CaM_Ca2__Ca = p_[33]
    KD__CaMKII_CaM_Ca1__Ca = p_[34]
    KD__CaMKII_CaM__Ca = p_[35]
    kf__pCaMKII_Ca3__Ca = p_[36]
    kf__CaM__pCaMKIIaut = p_[37]
    kf__CaM_Ca1__pCaMKIIaut = p_[38]
    kf__CaM_Ca2__pCaMKIIaut = p_[39]
    kf__CaM_Ca3__pCaMKIIaut = p_[40]
    kf__pCaMKII_Ca2__Ca = p_[41]
    kf__pCaMKII_Ca1__Ca = p_[42]
    kf__CaM_Ca4__pCaMKIIaut = p_[43]
    kf__pCaMKII_Ca0__Ca = p_[44]
    KD__pCaMKII_Ca3__Ca = p_[45]
    KD__pCaMKII_Ca2__Ca = p_[46]
    KD__pCaMKII_Ca1__Ca = p_[47]
    KD__pCaMKII_Ca0__Ca = p_[48]
    KD__CaM_Ca4__pCaMKIIaut = p_[49]
    kp__pairedCaMKIIc__CaMKIIc = p_[50]
    kf__PP1__pCaMKIIaut = p_[51]
    kr__PP1__pCaMKIIaut = p_[52]
    kcat__PP1__pCaMKIIaut = p_[53]
    Ca_set     = p_[54]
    PP1_0      = p_[55]
    CaMKII_0   = p_[56]
    CaM_0      = p_[57]
    PP2B_0     = p_[58]

    KD__CaM_Ca3__PP2B = KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__PP2B = KD__CaM_Ca2__Ca*KD__CaM_Ca3__PP2B/KD__PP2B_CaM_Ca2__Ca
    KD__CaM_Ca1__PP2B = 1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca1__Ca*KD__CaM_Ca2__PP2B
    KD__CaM__PP2B = 1.0/KD__PP2B_CaM__Ca*KD__CaM__Ca*KD__CaM_Ca1__PP2B
    KD__CaM_Ca3__CaMKII = KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    KD__CaM_Ca2__CaMKII = KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca3__CaMKII
    KD__CaM_Ca1__CaMKII = KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca2__CaMKII
    KD__CaM__CaMKII = KD__CaM_Ca1__CaMKII*KD__CaM__Ca/KD__CaMKII_CaM__Ca
    KD__CaM_Ca3__pCaMKIIaut = 1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__Ca/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__pCaMKIIaut
    KD__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca
    KD__CaM__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*KD__CaM__Ca/KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca3__Ca = kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    kr__CaM_Ca2__Ca = KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca
    kr__CaM_Ca1__Ca = kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    kr__CaM__Ca = KD__CaM__Ca*kf__CaM__Ca
    kr__CaM_Ca4__PP2B = KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B
    kr__CaM_Ca3__PP2B = kf__CaM_Ca3__PP2B*KD__CaM_Ca3__PP2B
    kr__CaM_Ca2__PP2B = KD__CaM_Ca2__PP2B*kf__CaM_Ca2__PP2B
    kr__CaM_Ca1__PP2B = kf__CaM_Ca1__PP2B*KD__CaM_Ca1__PP2B
    kr__CaM__PP2B = kf__CaM__PP2B*KD__CaM__PP2B
    kr__PP2B_CaM_Ca3__Ca = KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca
    kr__PP2B_CaM_Ca2__Ca = kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca
    kr__PP2B_CaM_Ca1__Ca = KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    kr__PP2B_CaM__Ca = KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca
    kr__CaM_Ca4__CaMKII = kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII
    kr__CaM_Ca3__CaMKII = kf__CaM_Ca3__CaMKII*KD__CaM_Ca3__CaMKII
    kr__CaM_Ca2__CaMKII = kf__CaM_Ca2__CaMKII*KD__CaM_Ca2__CaMKII
    kr__CaM_Ca1__CaMKII = KD__CaM_Ca1__CaMKII*kf__CaM_Ca1__CaMKII
    kr__CaM__CaMKII = KD__CaM__CaMKII*kf__CaM__CaMKII
    kr__CaMKII_CaM_Ca3__Ca = kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca
    kr__CaMKII_CaM_Ca2__Ca = kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca
    kr__CaMKII_CaM_Ca1__Ca = kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca
    kr__CaMKII_CaM__Ca = kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca
    kr__pCaMKII_Ca3__Ca = KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca
    kr__pCaMKII_Ca2__Ca = KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca
    kr__pCaMKII_Ca1__Ca = kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca
    kr__pCaMKII_Ca0__Ca = kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca4__pCaMKIIaut = KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut
    kr__CaM_Ca3__pCaMKIIaut = kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__pCaMKIIaut
    kr__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*kf__CaM_Ca2__pCaMKIIaut
    kr__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut
    kr__CaM__pCaMKIIaut = kf__CaM__pCaMKIIaut*KD__CaM__pCaMKIIaut
    logistic = 1.0/( exp(-10.0*t)+1.0)
    Ca = logistic*Ca_set
    PP1 = -PP1__pCaMKIIaut+PP1_0
    CaMKII = -PP1_0-pCaMKII_Ca2-pCaMKII-CaMKII_CaM_Ca2+CaMKII_0-pCaMKII_Ca1-pCaMKIIaut-CaMKII_CaM_Ca3-CaMKII_CaM-pCaMKII_Ca0-pCaMKII_Ca3+PP1-CaMKIIc-CaMKII_CaM_Ca1
    CaM = -PP2B_CaM_Ca3+PP1_0-PP2B_CaM+CaMKII-CaM_Ca2-PP2Bc-CaMKII_0-PP2B_CaM_Ca1-CaM_Ca3+pCaMKIIaut+CaM_0-PP2B_CaM_Ca2-CaM_Ca4-PP1-CaM_Ca1
    PP2B =  PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2
    totalCaMKII =  pCaMKII_Ca2+CaMKII+pCaMKII+CaMKII_CaM_Ca2+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1
    ActiveCaMKII =  pCaMKII_Ca2+pCaMKII+pCaMKII_Ca1+pCaMKIIaut+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc
    r = 1.0/( totalCaMKII+s)*( pCaMKII+CaMKIIc)
    pairedCaMKIIc = 1.0/( b*r+1.0)*a*(r*r)
    ReactionFlux1 = -kr__CaM__Ca*CaM_Ca1+CaM*Ca*kf__CaM__Ca
    ReactionFlux2 = -CaM_Ca2*kr__CaM_Ca1__Ca+kf__CaM_Ca1__Ca*Ca*CaM_Ca1
    ReactionFlux3 =  CaM_Ca2*kf__CaM_Ca2__Ca*Ca-CaM_Ca3*kr__CaM_Ca2__Ca
    ReactionFlux4 = -kr__CaM_Ca3__Ca*CaM_Ca4+CaM_Ca3*Ca*kf__CaM_Ca3__Ca
    ReactionFlux5 =  kf__CaM__PP2B*CaM*PP2B-PP2B_CaM*kr__CaM__PP2B
    ReactionFlux6 = -PP2B_CaM_Ca1*kr__CaM_Ca1__PP2B+kf__CaM_Ca1__PP2B*PP2B*CaM_Ca1
    ReactionFlux7 =  CaM_Ca2*kf__CaM_Ca2__PP2B*PP2B-kr__CaM_Ca2__PP2B*PP2B_CaM_Ca2
    ReactionFlux8 = -PP2B_CaM_Ca3*kr__CaM_Ca3__PP2B+kf__CaM_Ca3__PP2B*CaM_Ca3*PP2B
    ReactionFlux9 = -PP2Bc*kr__CaM_Ca4__PP2B+kf__CaM_Ca4__PP2B*PP2B*CaM_Ca4
    ReactionFlux10 =  PP2B_CaM*Ca*kf__PP2B_CaM__Ca-PP2B_CaM_Ca1*kr__PP2B_CaM__Ca
    ReactionFlux11 =  PP2B_CaM_Ca1*Ca*kf__PP2B_CaM_Ca1__Ca-kr__PP2B_CaM_Ca1__Ca*PP2B_CaM_Ca2
    ReactionFlux12 = -PP2B_CaM_Ca3*kr__PP2B_CaM_Ca2__Ca+kf__PP2B_CaM_Ca2__Ca*Ca*PP2B_CaM_Ca2
    ReactionFlux13 =  PP2B_CaM_Ca3*Ca*kf__PP2B_CaM_Ca3__Ca-kr__PP2B_CaM_Ca3__Ca*PP2Bc
    ReactionFlux14 = -kr__CaM__CaMKII*CaMKII_CaM+CaMKII*CaM*kf__CaM__CaMKII
    ReactionFlux15 = -kr__CaM_Ca1__CaMKII*CaMKII_CaM_Ca1+CaMKII*kf__CaM_Ca1__CaMKII*CaM_Ca1
    ReactionFlux16 =  CaMKII*CaM_Ca2*kf__CaM_Ca2__CaMKII-CaMKII_CaM_Ca2*kr__CaM_Ca2__CaMKII
    ReactionFlux17 = -CaMKII_CaM_Ca3*kr__CaM_Ca3__CaMKII+kf__CaM_Ca3__CaMKII*CaMKII*CaM_Ca3
    ReactionFlux18 =  CaMKII*kf__CaM_Ca4__CaMKII*CaM_Ca4-kr__CaM_Ca4__CaMKII*CaMKIIc
    ReactionFlux19 =  Ca*CaMKII_CaM*kf__CaMKII_CaM__Ca-kr__CaMKII_CaM__Ca*CaMKII_CaM_Ca1
    ReactionFlux20 =  Ca*kf__CaMKII_CaM_Ca1__Ca*CaMKII_CaM_Ca1-CaMKII_CaM_Ca2*kr__CaMKII_CaM_Ca1__Ca
    ReactionFlux21 = -kr__CaMKII_CaM_Ca2__Ca*CaMKII_CaM_Ca3+CaMKII_CaM_Ca2*kf__CaMKII_CaM_Ca2__Ca*Ca
    ReactionFlux22 =  Ca*CaMKII_CaM_Ca3*kf__CaMKII_CaM_Ca3__Ca-kr__CaMKII_CaM_Ca3__Ca*CaMKIIc
    ReactionFlux23 =  kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut*CaM_Ca4-pCaMKII*kr__CaM_Ca4__pCaMKIIaut
    ReactionFlux24 =  kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3*pCaMKIIaut-kr__CaM_Ca3__pCaMKIIaut*pCaMKII_Ca3
    ReactionFlux25 =  kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2*pCaMKIIaut-pCaMKII_Ca2*kr__CaM_Ca2__pCaMKIIaut
    ReactionFlux26 = -kr__CaM_Ca1__pCaMKIIaut*pCaMKII_Ca1+pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    ReactionFlux27 = -pCaMKII_Ca0*kr__CaM__pCaMKIIaut+CaM*pCaMKIIaut*kf__CaM__pCaMKIIaut
    ReactionFlux28 =  Ca*kf__pCaMKII_Ca0__Ca*pCaMKII_Ca0-kr__pCaMKII_Ca0__Ca*pCaMKII_Ca1
    ReactionFlux29 = -pCaMKII_Ca2*kr__pCaMKII_Ca1__Ca+kf__pCaMKII_Ca1__Ca*pCaMKII_Ca1*Ca
    ReactionFlux30 = -kr__pCaMKII_Ca2__Ca*pCaMKII_Ca3+pCaMKII_Ca2*Ca*kf__pCaMKII_Ca2__Ca
    ReactionFlux31 = -kr__pCaMKII_Ca3__Ca*pCaMKII+kf__pCaMKII_Ca3__Ca*Ca*pCaMKII_Ca3
    ReactionFlux32 = kp__pairedCaMKIIc__CaMKIIc*CaMKIIc*pairedCaMKIIc
    ReactionFlux33 =  pCaMKIIaut*PP1*kf__PP1__pCaMKIIaut-PP1__pCaMKIIaut*kr__PP1__pCaMKIIaut
    ReactionFlux34 = PP1__pCaMKIIaut*kcat__PP1__pCaMKIIaut

    f_ = numpy.zeros((21,))
    f_[0] = -ReactionFlux26+ReactionFlux1-ReactionFlux2-ReactionFlux15-ReactionFlux6
    f_[1] = -ReactionFlux7+ReactionFlux2-ReactionFlux3-ReactionFlux16-ReactionFlux25
    f_[2] = -ReactionFlux4-ReactionFlux17-ReactionFlux8-ReactionFlux24+ReactionFlux3
    f_[3] =  ReactionFlux4-ReactionFlux23-ReactionFlux18-ReactionFlux9
    f_[4] = -ReactionFlux10+ReactionFlux5
    f_[5] =  ReactionFlux10-ReactionFlux11+ReactionFlux6
    f_[6] =  ReactionFlux7+ReactionFlux11-ReactionFlux12
    f_[7] =  ReactionFlux8+ReactionFlux12-ReactionFlux13
    f_[8] =  ReactionFlux9+ReactionFlux13
    f_[9] =  ReactionFlux14-ReactionFlux19
    f_[10] = -ReactionFlux20+ReactionFlux15+ReactionFlux19
    f_[11] =  ReactionFlux20-ReactionFlux21+ReactionFlux16
    f_[12] =  ReactionFlux17+ReactionFlux21-ReactionFlux22
    f_[13] = -ReactionFlux32+ReactionFlux18+ReactionFlux22
    f_[14] =  ReactionFlux32+ReactionFlux23+ReactionFlux31
    f_[15] = -ReactionFlux26-ReactionFlux23-ReactionFlux33-ReactionFlux27-ReactionFlux24-ReactionFlux25
    f_[16] =  ReactionFlux30+ReactionFlux24-ReactionFlux31
    f_[17] =  ReactionFlux29-ReactionFlux30+ReactionFlux25
    f_[18] = -ReactionFlux29+ReactionFlux26+ReactionFlux28
    f_[19] =  ReactionFlux27-ReactionFlux28
    f_[20] =  ReactionFlux33-ReactionFlux34

    return f_

#
#  The Jacobian.
#

def jacobian(y_, t_, p_):
    """
    The Jacobian of the vector field "CaMKIIs"
    Arguments:
        y_ :  vector of the state variables:
                  y_[0] is CaM_Ca1
                  y_[1] is CaM_Ca2
                  y_[2] is CaM_Ca3
                  y_[3] is CaM_Ca4
                  y_[4] is PP2B_CaM
                  y_[5] is PP2B_CaM_Ca1
                  y_[6] is PP2B_CaM_Ca2
                  y_[7] is PP2B_CaM_Ca3
                  y_[8] is PP2Bc
                  y_[9] is CaMKII_CaM
                  y_[10] is CaMKII_CaM_Ca1
                  y_[11] is CaMKII_CaM_Ca2
                  y_[12] is CaMKII_CaM_Ca3
                  y_[13] is CaMKIIc
                  y_[14] is pCaMKII
                  y_[15] is pCaMKIIaut
                  y_[16] is pCaMKII_Ca3
                  y_[17] is pCaMKII_Ca2
                  y_[18] is pCaMKII_Ca1
                  y_[19] is pCaMKII_Ca0
                  y_[20] is PP1__pCaMKIIaut
        t_ :  time
        p_ :  vector of the parameters
                  p_[0] is kf__CaM__Ca
                  p_[1] is kf__CaM_Ca1__Ca
                  p_[2] is kf__CaM_Ca2__Ca
                  p_[3] is kf__CaM_Ca3__Ca
                  p_[4] is kf__CaM__PP2B
                  p_[5] is kf__CaM_Ca1__PP2B
                  p_[6] is kf__CaM_Ca2__PP2B
                  p_[7] is kf__CaM_Ca3__PP2B
                  p_[8] is kf__CaM_Ca4__PP2B
                  p_[9] is kf__PP2B_CaM__Ca
                  p_[10] is kf__PP2B_CaM_Ca1__Ca
                  p_[11] is kf__PP2B_CaM_Ca2__Ca
                  p_[12] is kf__PP2B_CaM_Ca3__Ca
                  p_[13] is KD__CaM_Ca3__Ca
                  p_[14] is KD__CaM_Ca2__Ca
                  p_[15] is KD__CaM_Ca1__Ca
                  p_[16] is KD__CaM__Ca
                  p_[17] is KD__CaM_Ca4__PP2B
                  p_[18] is KD__PP2B_CaM_Ca3__Ca
                  p_[19] is KD__PP2B_CaM_Ca2__Ca
                  p_[20] is KD__PP2B_CaM_Ca1__Ca
                  p_[21] is KD__PP2B_CaM__Ca
                  p_[22] is kf__CaM__CaMKII
                  p_[23] is kf__CaMKII_CaM_Ca3__Ca
                  p_[24] is kf__CaMKII_CaM_Ca2__Ca
                  p_[25] is kf__CaMKII_CaM_Ca1__Ca
                  p_[26] is kf__CaMKII_CaM__Ca
                  p_[27] is kf__CaM_Ca1__CaMKII
                  p_[28] is kf__CaM_Ca2__CaMKII
                  p_[29] is kf__CaM_Ca3__CaMKII
                  p_[30] is kf__CaM_Ca4__CaMKII
                  p_[31] is KD__CaM_Ca4__CaMKII
                  p_[32] is KD__CaMKII_CaM_Ca3__Ca
                  p_[33] is KD__CaMKII_CaM_Ca2__Ca
                  p_[34] is KD__CaMKII_CaM_Ca1__Ca
                  p_[35] is KD__CaMKII_CaM__Ca
                  p_[36] is kf__pCaMKII_Ca3__Ca
                  p_[37] is kf__CaM__pCaMKIIaut
                  p_[38] is kf__CaM_Ca1__pCaMKIIaut
                  p_[39] is kf__CaM_Ca2__pCaMKIIaut
                  p_[40] is kf__CaM_Ca3__pCaMKIIaut
                  p_[41] is kf__pCaMKII_Ca2__Ca
                  p_[42] is kf__pCaMKII_Ca1__Ca
                  p_[43] is kf__CaM_Ca4__pCaMKIIaut
                  p_[44] is kf__pCaMKII_Ca0__Ca
                  p_[45] is KD__pCaMKII_Ca3__Ca
                  p_[46] is KD__pCaMKII_Ca2__Ca
                  p_[47] is KD__pCaMKII_Ca1__Ca
                  p_[48] is KD__pCaMKII_Ca0__Ca
                  p_[49] is KD__CaM_Ca4__pCaMKIIaut
                  p_[50] is kp__pairedCaMKIIc__CaMKIIc
                  p_[51] is kf__PP1__pCaMKIIaut
                  p_[52] is kr__PP1__pCaMKIIaut
                  p_[53] is kcat__PP1__pCaMKIIaut
                  p_[54] is Ca_set
                  p_[55] is PP1_0
                  p_[56] is CaMKII_0
                  p_[57] is CaM_0
                  p_[58] is PP2B_0
    """
    s = 1.0000000000000001e-05;
    a = 3.9026399999999999e+00;
    b = 2.8697200000000000e+00;
    CaM_Ca1    = y_[0]
    CaM_Ca2    = y_[1]
    CaM_Ca3    = y_[2]
    CaM_Ca4    = y_[3]
    PP2B_CaM   = y_[4]
    PP2B_CaM_Ca1 = y_[5]
    PP2B_CaM_Ca2 = y_[6]
    PP2B_CaM_Ca3 = y_[7]
    PP2Bc      = y_[8]
    CaMKII_CaM = y_[9]
    CaMKII_CaM_Ca1 = y_[10]
    CaMKII_CaM_Ca2 = y_[11]
    CaMKII_CaM_Ca3 = y_[12]
    CaMKIIc    = y_[13]
    pCaMKII    = y_[14]
    pCaMKIIaut = y_[15]
    pCaMKII_Ca3 = y_[16]
    pCaMKII_Ca2 = y_[17]
    pCaMKII_Ca1 = y_[18]
    pCaMKII_Ca0 = y_[19]
    PP1__pCaMKIIaut = y_[20]
    kf__CaM__Ca = p_[0]
    kf__CaM_Ca1__Ca = p_[1]
    kf__CaM_Ca2__Ca = p_[2]
    kf__CaM_Ca3__Ca = p_[3]
    kf__CaM__PP2B = p_[4]
    kf__CaM_Ca1__PP2B = p_[5]
    kf__CaM_Ca2__PP2B = p_[6]
    kf__CaM_Ca3__PP2B = p_[7]
    kf__CaM_Ca4__PP2B = p_[8]
    kf__PP2B_CaM__Ca = p_[9]
    kf__PP2B_CaM_Ca1__Ca = p_[10]
    kf__PP2B_CaM_Ca2__Ca = p_[11]
    kf__PP2B_CaM_Ca3__Ca = p_[12]
    KD__CaM_Ca3__Ca = p_[13]
    KD__CaM_Ca2__Ca = p_[14]
    KD__CaM_Ca1__Ca = p_[15]
    KD__CaM__Ca = p_[16]
    KD__CaM_Ca4__PP2B = p_[17]
    KD__PP2B_CaM_Ca3__Ca = p_[18]
    KD__PP2B_CaM_Ca2__Ca = p_[19]
    KD__PP2B_CaM_Ca1__Ca = p_[20]
    KD__PP2B_CaM__Ca = p_[21]
    kf__CaM__CaMKII = p_[22]
    kf__CaMKII_CaM_Ca3__Ca = p_[23]
    kf__CaMKII_CaM_Ca2__Ca = p_[24]
    kf__CaMKII_CaM_Ca1__Ca = p_[25]
    kf__CaMKII_CaM__Ca = p_[26]
    kf__CaM_Ca1__CaMKII = p_[27]
    kf__CaM_Ca2__CaMKII = p_[28]
    kf__CaM_Ca3__CaMKII = p_[29]
    kf__CaM_Ca4__CaMKII = p_[30]
    KD__CaM_Ca4__CaMKII = p_[31]
    KD__CaMKII_CaM_Ca3__Ca = p_[32]
    KD__CaMKII_CaM_Ca2__Ca = p_[33]
    KD__CaMKII_CaM_Ca1__Ca = p_[34]
    KD__CaMKII_CaM__Ca = p_[35]
    kf__pCaMKII_Ca3__Ca = p_[36]
    kf__CaM__pCaMKIIaut = p_[37]
    kf__CaM_Ca1__pCaMKIIaut = p_[38]
    kf__CaM_Ca2__pCaMKIIaut = p_[39]
    kf__CaM_Ca3__pCaMKIIaut = p_[40]
    kf__pCaMKII_Ca2__Ca = p_[41]
    kf__pCaMKII_Ca1__Ca = p_[42]
    kf__CaM_Ca4__pCaMKIIaut = p_[43]
    kf__pCaMKII_Ca0__Ca = p_[44]
    KD__pCaMKII_Ca3__Ca = p_[45]
    KD__pCaMKII_Ca2__Ca = p_[46]
    KD__pCaMKII_Ca1__Ca = p_[47]
    KD__pCaMKII_Ca0__Ca = p_[48]
    KD__CaM_Ca4__pCaMKIIaut = p_[49]
    kp__pairedCaMKIIc__CaMKIIc = p_[50]
    kf__PP1__pCaMKIIaut = p_[51]
    kr__PP1__pCaMKIIaut = p_[52]
    kcat__PP1__pCaMKIIaut = p_[53]
    Ca_set     = p_[54]
    PP1_0      = p_[55]
    CaMKII_0   = p_[56]
    CaM_0      = p_[57]
    PP2B_0     = p_[58]

    # Create the Jacobian matrix:
    jac_ = numpy.zeros((21,21))
    jac_[0,0] = -1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca-pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut-kf__CaM_Ca1__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)+( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM_Ca1__CaMKII-1.0/( exp(-10.0*t)+1.0)*kf__CaM_Ca1__Ca*Ca_set-KD__CaM__Ca*kf__CaM__Ca
    jac_[0,1] = -1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca+kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    jac_[0,2] = -1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,3] = -1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,4] =  kf__CaM_Ca1__PP2B*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,5] =  1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca4__PP2B*KD__CaM_Ca2__Ca*kf__CaM_Ca1__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca1__Ca/KD__PP2B_CaM_Ca2__Ca*KD__CaM_Ca3__Ca+kf__CaM_Ca1__PP2B*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,6] =  kf__CaM_Ca1__PP2B*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,7] =  kf__CaM_Ca1__PP2B*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,8] =  kf__CaM_Ca1__PP2B*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,9] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,10] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca+KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*kf__CaM_Ca1__CaMKII*KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    jac_[0,11] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,12] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,13] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,14] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,15] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    jac_[0,16] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,17] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,18] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca+1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca*kf__CaM_Ca1__pCaMKIIaut*KD__CaM_Ca3__Ca
    jac_[0,19] =  kf__CaM_Ca1__CaMKII*CaM_Ca1-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM__Ca
    jac_[0,20] = kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[1,0] = 1.0/( exp(-10.0*t)+1.0)*kf__CaM_Ca1__Ca*Ca_set
    jac_[1,1] = -( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)*kf__CaM_Ca2__PP2B+( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM_Ca2__CaMKII-kf__CaM_Ca2__pCaMKIIaut*pCaMKIIaut-1.0/( exp(-10.0*t)+1.0)*kf__CaM_Ca2__Ca*Ca_set-kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    jac_[1,2] = KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca
    jac_[1,4] = CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[1,5] = CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[1,6] =  KD__CaM_Ca4__PP2B*KD__CaM_Ca2__Ca/KD__PP2B_CaM_Ca3__Ca*kf__CaM_Ca2__PP2B/KD__PP2B_CaM_Ca2__Ca*KD__CaM_Ca3__Ca+CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[1,7] = CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[1,8] = CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[1,9] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,10] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,11] =  KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca4__CaMKII*kf__CaM_Ca2__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca+CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,12] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,13] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,14] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,15] = -kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2+CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,16] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,17] =  1.0/KD__pCaMKII_Ca3__Ca*kf__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__Ca+CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,18] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,19] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[1,20] = CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[2,1] = 1.0/( exp(-10.0*t)+1.0)*kf__CaM_Ca2__Ca*Ca_set
    jac_[2,2] = -kf__CaM_Ca3__pCaMKIIaut*pCaMKIIaut-KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca-kf__CaM_Ca3__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)+kf__CaM_Ca3__CaMKII*( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM_Ca3__Ca
    jac_[2,3] = kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    jac_[2,4] = kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[2,5] = kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[2,6] = kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[2,7] =  kf__CaM_Ca3__PP2B*KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca+kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[2,8] = kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[2,9] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,10] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,11] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,12] =  kf__CaM_Ca3__CaMKII*CaM_Ca3+kf__CaM_Ca3__CaMKII*KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    jac_[2,13] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,14] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,15] = -kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3+kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,16] =  1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__Ca+kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,17] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,18] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,19] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[2,20] = kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[3,2] = 1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaM_Ca3__Ca
    jac_[3,3] = -kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut-kf__CaM_Ca4__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)-kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca+( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM_Ca4__CaMKII
    jac_[3,4] = kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[3,5] = kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[3,6] = kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[3,7] = kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[3,8] =  KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B+kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[3,9] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,10] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,11] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,12] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,13] =  kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII+kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,14] =  KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut+kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,15] = -kf__CaM_Ca4__pCaMKIIaut*CaM_Ca4+kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,16] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,17] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,18] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,19] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[3,20] = kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[4,0] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,1] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,2] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,3] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,4] =  ( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__PP2B-kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)-1.0/KD__PP2B_CaM_Ca1__Ca*kf__CaM__PP2B*KD__CaM_Ca4__PP2B*KD__CaM_Ca2__Ca/KD__PP2B_CaM__Ca/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca1__Ca/KD__PP2B_CaM_Ca2__Ca*KD__CaM__Ca*KD__CaM_Ca3__Ca-1.0/( exp(-10.0*t)+1.0)*kf__PP2B_CaM__Ca*Ca_set
    jac_[4,5] =  KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__PP2B-kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,6] =  ( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__PP2B-kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,7] =  ( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__PP2B-kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,8] =  ( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__PP2B-kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,9] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,10] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,11] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,12] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,13] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,14] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,16] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,17] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,18] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[4,19] = -kf__CaM__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[5,0] = kf__CaM_Ca1__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[5,4] = -kf__CaM_Ca1__PP2B*CaM_Ca1+1.0/( exp(-10.0*t)+1.0)*kf__PP2B_CaM__Ca*Ca_set
    jac_[5,5] = -KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca-1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca4__PP2B*KD__CaM_Ca2__Ca*kf__CaM_Ca1__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca1__Ca/KD__PP2B_CaM_Ca2__Ca*KD__CaM_Ca3__Ca-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__PP2B_CaM_Ca1__Ca-kf__CaM_Ca1__PP2B*CaM_Ca1
    jac_[5,6] = -kf__CaM_Ca1__PP2B*CaM_Ca1+KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    jac_[5,7] = -kf__CaM_Ca1__PP2B*CaM_Ca1
    jac_[5,8] = -kf__CaM_Ca1__PP2B*CaM_Ca1
    jac_[6,1] = ( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)*kf__CaM_Ca2__PP2B
    jac_[6,4] = -CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[6,5] =  1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__PP2B_CaM_Ca1__Ca-CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[6,6] = -1.0/( exp(-10.0*t)+1.0)*kf__PP2B_CaM_Ca2__Ca*Ca_set-KD__CaM_Ca4__PP2B*KD__CaM_Ca2__Ca/KD__PP2B_CaM_Ca3__Ca*kf__CaM_Ca2__PP2B/KD__PP2B_CaM_Ca2__Ca*KD__CaM_Ca3__Ca-CaM_Ca2*kf__CaM_Ca2__PP2B-KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    jac_[6,7] =  kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca-CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[6,8] = -CaM_Ca2*kf__CaM_Ca2__PP2B
    jac_[7,2] = kf__CaM_Ca3__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[7,4] = -kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[7,5] = -kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[7,6] =  1.0/( exp(-10.0*t)+1.0)*kf__PP2B_CaM_Ca2__Ca*Ca_set-kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[7,7] = -1.0/( exp(-10.0*t)+1.0)*kf__PP2B_CaM_Ca3__Ca*Ca_set-kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca-kf__CaM_Ca3__PP2B*KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca-kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[7,8] =  KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca-kf__CaM_Ca3__PP2B*CaM_Ca3
    jac_[8,3] = kf__CaM_Ca4__PP2B*( PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2)
    jac_[8,4] = -kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[8,5] = -kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[8,6] = -kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[8,7] =  1.0/( exp(-10.0*t)+1.0)*kf__PP2B_CaM_Ca3__Ca*Ca_set-kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[8,8] = -KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B-KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca-kf__CaM_Ca4__PP2B*CaM_Ca4
    jac_[9,0] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,1] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,2] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,3] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,4] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,5] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,6] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,7] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,8] = ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,9] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII-1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaMKII_CaM__Ca+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII-KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*kf__CaM__CaMKII*KD__CaM_Ca4__CaMKII*KD__CaM__Ca*KD__CaM_Ca3__Ca/KD__CaMKII_CaM__Ca/KD__CaMKII_CaM_Ca3__Ca
    jac_[9,10] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca
    jac_[9,11] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,12] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,13] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,14] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,15] = ( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,16] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,17] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,18] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,19] =  ( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[9,20] = ( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__CaMKII
    jac_[10,0] = -( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM_Ca1__CaMKII
    jac_[10,9] =  1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaMKII_CaM__Ca-kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,10] = -1.0/( exp(-10.0*t)+1.0)*kf__CaMKII_CaM_Ca1__Ca*Ca_set-kf__CaM_Ca1__CaMKII*CaM_Ca1-kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca-KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*kf__CaM_Ca1__CaMKII*KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    jac_[10,11] = -kf__CaM_Ca1__CaMKII*CaM_Ca1+kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca
    jac_[10,12] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,13] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,14] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,15] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,16] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,17] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,18] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,19] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[10,20] = -kf__CaM_Ca1__CaMKII*CaM_Ca1
    jac_[11,1] = -( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM_Ca2__CaMKII
    jac_[11,9] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,10] =  1.0/( exp(-10.0*t)+1.0)*kf__CaMKII_CaM_Ca1__Ca*Ca_set-CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,11] = -KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca4__CaMKII*kf__CaM_Ca2__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca-1.0/( exp(-10.0*t)+1.0)*kf__CaMKII_CaM_Ca2__Ca*Ca_set-kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca-CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,12] =  kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca-CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,13] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,14] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,15] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,16] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,17] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,18] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,19] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[11,20] = -CaM_Ca2*kf__CaM_Ca2__CaMKII
    jac_[12,2] = -kf__CaM_Ca3__CaMKII*( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)
    jac_[12,9] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,10] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,11] =  1.0/( exp(-10.0*t)+1.0)*kf__CaMKII_CaM_Ca2__Ca*Ca_set-kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,12] = -1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaMKII_CaM_Ca3__Ca-kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca-kf__CaM_Ca3__CaMKII*CaM_Ca3-kf__CaM_Ca3__CaMKII*KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    jac_[12,13] =  kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca-kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,14] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,15] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,16] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,17] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,18] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,19] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[12,20] = -kf__CaM_Ca3__CaMKII*CaM_Ca3
    jac_[13,3] = -( PP1__pCaMKIIaut+pCaMKII_Ca2+pCaMKII+CaMKII_CaM_Ca2-CaMKII_0+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM_Ca4__CaMKII
    jac_[13,9] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,10] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,11] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,12] =  1.0/( exp(-10.0*t)+1.0)*Ca_set*kf__CaMKII_CaM_Ca3__Ca-kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,13] = -kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII+a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,2.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)-kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca-a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc*b/pow( PP1__pCaMKIIaut-CaMKII_0-s,3.0)/pow( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0,2.0)*CaMKIIc-kf__CaM_Ca4__CaMKII*CaM_Ca4+2.0*a*( pCaMKII+CaMKIIc)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,2.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)*CaMKIIc
    jac_[13,14] = -a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc*b/pow( PP1__pCaMKIIaut-CaMKII_0-s,3.0)/pow( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0,2.0)*CaMKIIc-kf__CaM_Ca4__CaMKII*CaM_Ca4+2.0*a*( pCaMKII+CaMKIIc)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,2.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)*CaMKIIc
    jac_[13,15] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,16] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,17] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,18] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,19] = -kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[13,20] =  a*pow( pCaMKII+CaMKIIc,3.0)*kp__pairedCaMKIIc__CaMKIIc*b/pow( PP1__pCaMKIIaut-CaMKII_0-s,4.0)/pow( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0,2.0)*CaMKIIc+-2.0*a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,3.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)*CaMKIIc-kf__CaM_Ca4__CaMKII*CaM_Ca4
    jac_[14,3] = kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut
    jac_[14,13] = -a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,2.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)+a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc*b/pow( PP1__pCaMKIIaut-CaMKII_0-s,3.0)/pow( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0,2.0)*CaMKIIc+-2.0*a*( pCaMKII+CaMKIIc)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,2.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)*CaMKIIc
    jac_[14,14] = -KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut-KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca+a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc*b/pow( PP1__pCaMKIIaut-CaMKII_0-s,3.0)/pow( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0,2.0)*CaMKIIc+-2.0*a*( pCaMKII+CaMKIIc)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,2.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)*CaMKIIc
    jac_[14,15] = kf__CaM_Ca4__pCaMKIIaut*CaM_Ca4
    jac_[14,16] = 1.0/( exp(-10.0*t)+1.0)*kf__pCaMKII_Ca3__Ca*Ca_set
    jac_[14,20] = -a*pow( pCaMKII+CaMKIIc,3.0)*kp__pairedCaMKIIc__CaMKIIc*b/pow( PP1__pCaMKIIaut-CaMKII_0-s,4.0)/pow( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0,2.0)*CaMKIIc+2.0*a*pow( pCaMKII+CaMKIIc,2.0)*kp__pairedCaMKIIc__CaMKIIc/pow( PP1__pCaMKIIaut-CaMKII_0-s,3.0)/( ( pCaMKII+CaMKIIc)*b/( PP1__pCaMKIIaut-CaMKII_0-s)-1.0)*CaMKIIc
    jac_[15,0] = -pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,1] = -kf__CaM_Ca2__pCaMKIIaut*pCaMKIIaut+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,2] = -kf__CaM_Ca3__pCaMKIIaut*pCaMKIIaut+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,3] = -kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,4] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,5] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,6] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,7] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,8] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,9] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,10] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,11] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,12] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,13] = pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,14] =  KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,15] = -kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3-kf__CaM_Ca4__pCaMKIIaut*CaM_Ca4+( PP1__pCaMKIIaut-PP1_0)*kf__PP1__pCaMKIIaut+( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__pCaMKIIaut-kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1-kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2
    jac_[15,16] =  1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__Ca+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,17] =  1.0/KD__pCaMKII_Ca3__Ca*kf__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__Ca+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,18] =  1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca*kf__CaM_Ca1__pCaMKIIaut*KD__CaM_Ca3__Ca+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,19] =  1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca1__Ca*kf__CaM__pCaMKIIaut/KD__pCaMKII_Ca1__Ca*KD__CaM__Ca*KD__CaM_Ca3__Ca/KD__pCaMKII_Ca0__Ca+pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[15,20] =  kr__PP1__pCaMKIIaut+pCaMKIIaut*kf__PP1__pCaMKIIaut
    jac_[16,2] = kf__CaM_Ca3__pCaMKIIaut*pCaMKIIaut
    jac_[16,14] = KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca
    jac_[16,15] = kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3
    jac_[16,16] = -1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__Ca-KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca-1.0/( exp(-10.0*t)+1.0)*kf__pCaMKII_Ca3__Ca*Ca_set
    jac_[16,17] = 1.0/( exp(-10.0*t)+1.0)*kf__pCaMKII_Ca2__Ca*Ca_set
    jac_[17,1] = kf__CaM_Ca2__pCaMKIIaut*pCaMKIIaut
    jac_[17,15] = kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2
    jac_[17,16] = KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca
    jac_[17,17] = -1.0/KD__pCaMKII_Ca3__Ca*kf__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__Ca-kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca-1.0/( exp(-10.0*t)+1.0)*kf__pCaMKII_Ca2__Ca*Ca_set
    jac_[17,18] = kf__pCaMKII_Ca1__Ca/( exp(-10.0*t)+1.0)*Ca_set
    jac_[18,0] = pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut
    jac_[18,15] = kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    jac_[18,17] = kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca
    jac_[18,18] = -kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca-kf__pCaMKII_Ca1__Ca/( exp(-10.0*t)+1.0)*Ca_set-1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca*kf__CaM_Ca1__pCaMKIIaut*KD__CaM_Ca3__Ca
    jac_[18,19] = 1.0/( exp(-10.0*t)+1.0)*kf__pCaMKII_Ca0__Ca*Ca_set
    jac_[19,0] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,1] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,2] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,3] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,4] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,5] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,6] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,7] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,8] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,9] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,10] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,11] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,12] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,13] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,14] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,15] = -( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM-CaM_0+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+CaMKII_CaM_Ca1)*kf__CaM__pCaMKIIaut
    jac_[19,16] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,17] = -pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,18] =  kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca-pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[19,19] = -1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca2__Ca*KD__CaM_Ca4__pCaMKIIaut/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca1__Ca*kf__CaM__pCaMKIIaut/KD__pCaMKII_Ca1__Ca*KD__CaM__Ca*KD__CaM_Ca3__Ca/KD__pCaMKII_Ca0__Ca-1.0/( exp(-10.0*t)+1.0)*kf__pCaMKII_Ca0__Ca*Ca_set-pCaMKIIaut*kf__CaM__pCaMKIIaut
    jac_[20,15] = -( PP1__pCaMKIIaut-PP1_0)*kf__PP1__pCaMKIIaut
    jac_[20,20] = -kr__PP1__pCaMKIIaut-pCaMKIIaut*kf__PP1__pCaMKIIaut-kcat__PP1__pCaMKIIaut
    return jac_


#
# User function: MolCaPerMolCaM
#

def MolCaPerMolCaM(y_, t_, p_):
    """
    The user-defined function "MolCaPerMolCaM" for the vector field "CaMKIIs"
    Arguments:
        y_ :  vector of the state variables:
                  y_[0] is CaM_Ca1
                  y_[1] is CaM_Ca2
                  y_[2] is CaM_Ca3
                  y_[3] is CaM_Ca4
                  y_[4] is PP2B_CaM
                  y_[5] is PP2B_CaM_Ca1
                  y_[6] is PP2B_CaM_Ca2
                  y_[7] is PP2B_CaM_Ca3
                  y_[8] is PP2Bc
                  y_[9] is CaMKII_CaM
                  y_[10] is CaMKII_CaM_Ca1
                  y_[11] is CaMKII_CaM_Ca2
                  y_[12] is CaMKII_CaM_Ca3
                  y_[13] is CaMKIIc
                  y_[14] is pCaMKII
                  y_[15] is pCaMKIIaut
                  y_[16] is pCaMKII_Ca3
                  y_[17] is pCaMKII_Ca2
                  y_[18] is pCaMKII_Ca1
                  y_[19] is pCaMKII_Ca0
                  y_[20] is PP1__pCaMKIIaut
        t_ :  time
        p_ :  vector of the parameters
                  p_[0] is kf__CaM__Ca
                  p_[1] is kf__CaM_Ca1__Ca
                  p_[2] is kf__CaM_Ca2__Ca
                  p_[3] is kf__CaM_Ca3__Ca
                  p_[4] is kf__CaM__PP2B
                  p_[5] is kf__CaM_Ca1__PP2B
                  p_[6] is kf__CaM_Ca2__PP2B
                  p_[7] is kf__CaM_Ca3__PP2B
                  p_[8] is kf__CaM_Ca4__PP2B
                  p_[9] is kf__PP2B_CaM__Ca
                  p_[10] is kf__PP2B_CaM_Ca1__Ca
                  p_[11] is kf__PP2B_CaM_Ca2__Ca
                  p_[12] is kf__PP2B_CaM_Ca3__Ca
                  p_[13] is KD__CaM_Ca3__Ca
                  p_[14] is KD__CaM_Ca2__Ca
                  p_[15] is KD__CaM_Ca1__Ca
                  p_[16] is KD__CaM__Ca
                  p_[17] is KD__CaM_Ca4__PP2B
                  p_[18] is KD__PP2B_CaM_Ca3__Ca
                  p_[19] is KD__PP2B_CaM_Ca2__Ca
                  p_[20] is KD__PP2B_CaM_Ca1__Ca
                  p_[21] is KD__PP2B_CaM__Ca
                  p_[22] is kf__CaM__CaMKII
                  p_[23] is kf__CaMKII_CaM_Ca3__Ca
                  p_[24] is kf__CaMKII_CaM_Ca2__Ca
                  p_[25] is kf__CaMKII_CaM_Ca1__Ca
                  p_[26] is kf__CaMKII_CaM__Ca
                  p_[27] is kf__CaM_Ca1__CaMKII
                  p_[28] is kf__CaM_Ca2__CaMKII
                  p_[29] is kf__CaM_Ca3__CaMKII
                  p_[30] is kf__CaM_Ca4__CaMKII
                  p_[31] is KD__CaM_Ca4__CaMKII
                  p_[32] is KD__CaMKII_CaM_Ca3__Ca
                  p_[33] is KD__CaMKII_CaM_Ca2__Ca
                  p_[34] is KD__CaMKII_CaM_Ca1__Ca
                  p_[35] is KD__CaMKII_CaM__Ca
                  p_[36] is kf__pCaMKII_Ca3__Ca
                  p_[37] is kf__CaM__pCaMKIIaut
                  p_[38] is kf__CaM_Ca1__pCaMKIIaut
                  p_[39] is kf__CaM_Ca2__pCaMKIIaut
                  p_[40] is kf__CaM_Ca3__pCaMKIIaut
                  p_[41] is kf__pCaMKII_Ca2__Ca
                  p_[42] is kf__pCaMKII_Ca1__Ca
                  p_[43] is kf__CaM_Ca4__pCaMKIIaut
                  p_[44] is kf__pCaMKII_Ca0__Ca
                  p_[45] is KD__pCaMKII_Ca3__Ca
                  p_[46] is KD__pCaMKII_Ca2__Ca
                  p_[47] is KD__pCaMKII_Ca1__Ca
                  p_[48] is KD__pCaMKII_Ca0__Ca
                  p_[49] is KD__CaM_Ca4__pCaMKIIaut
                  p_[50] is kp__pairedCaMKIIc__CaMKIIc
                  p_[51] is kf__PP1__pCaMKIIaut
                  p_[52] is kr__PP1__pCaMKIIaut
                  p_[53] is kcat__PP1__pCaMKIIaut
                  p_[54] is Ca_set
                  p_[55] is PP1_0
                  p_[56] is CaMKII_0
                  p_[57] is CaM_0
                  p_[58] is PP2B_0
    """
    s = 1.0000000000000001e-05;
    a = 3.9026399999999999e+00;
    b = 2.8697200000000000e+00;
    CaM_Ca1    = y_[0]
    CaM_Ca2    = y_[1]
    CaM_Ca3    = y_[2]
    CaM_Ca4    = y_[3]
    PP2B_CaM   = y_[4]
    PP2B_CaM_Ca1 = y_[5]
    PP2B_CaM_Ca2 = y_[6]
    PP2B_CaM_Ca3 = y_[7]
    PP2Bc      = y_[8]
    CaMKII_CaM = y_[9]
    CaMKII_CaM_Ca1 = y_[10]
    CaMKII_CaM_Ca2 = y_[11]
    CaMKII_CaM_Ca3 = y_[12]
    CaMKIIc    = y_[13]
    pCaMKII    = y_[14]
    pCaMKIIaut = y_[15]
    pCaMKII_Ca3 = y_[16]
    pCaMKII_Ca2 = y_[17]
    pCaMKII_Ca1 = y_[18]
    pCaMKII_Ca0 = y_[19]
    PP1__pCaMKIIaut = y_[20]

    kf__CaM__Ca = p_[0]
    kf__CaM_Ca1__Ca = p_[1]
    kf__CaM_Ca2__Ca = p_[2]
    kf__CaM_Ca3__Ca = p_[3]
    kf__CaM__PP2B = p_[4]
    kf__CaM_Ca1__PP2B = p_[5]
    kf__CaM_Ca2__PP2B = p_[6]
    kf__CaM_Ca3__PP2B = p_[7]
    kf__CaM_Ca4__PP2B = p_[8]
    kf__PP2B_CaM__Ca = p_[9]
    kf__PP2B_CaM_Ca1__Ca = p_[10]
    kf__PP2B_CaM_Ca2__Ca = p_[11]
    kf__PP2B_CaM_Ca3__Ca = p_[12]
    KD__CaM_Ca3__Ca = p_[13]
    KD__CaM_Ca2__Ca = p_[14]
    KD__CaM_Ca1__Ca = p_[15]
    KD__CaM__Ca = p_[16]
    KD__CaM_Ca4__PP2B = p_[17]
    KD__PP2B_CaM_Ca3__Ca = p_[18]
    KD__PP2B_CaM_Ca2__Ca = p_[19]
    KD__PP2B_CaM_Ca1__Ca = p_[20]
    KD__PP2B_CaM__Ca = p_[21]
    kf__CaM__CaMKII = p_[22]
    kf__CaMKII_CaM_Ca3__Ca = p_[23]
    kf__CaMKII_CaM_Ca2__Ca = p_[24]
    kf__CaMKII_CaM_Ca1__Ca = p_[25]
    kf__CaMKII_CaM__Ca = p_[26]
    kf__CaM_Ca1__CaMKII = p_[27]
    kf__CaM_Ca2__CaMKII = p_[28]
    kf__CaM_Ca3__CaMKII = p_[29]
    kf__CaM_Ca4__CaMKII = p_[30]
    KD__CaM_Ca4__CaMKII = p_[31]
    KD__CaMKII_CaM_Ca3__Ca = p_[32]
    KD__CaMKII_CaM_Ca2__Ca = p_[33]
    KD__CaMKII_CaM_Ca1__Ca = p_[34]
    KD__CaMKII_CaM__Ca = p_[35]
    kf__pCaMKII_Ca3__Ca = p_[36]
    kf__CaM__pCaMKIIaut = p_[37]
    kf__CaM_Ca1__pCaMKIIaut = p_[38]
    kf__CaM_Ca2__pCaMKIIaut = p_[39]
    kf__CaM_Ca3__pCaMKIIaut = p_[40]
    kf__pCaMKII_Ca2__Ca = p_[41]
    kf__pCaMKII_Ca1__Ca = p_[42]
    kf__CaM_Ca4__pCaMKIIaut = p_[43]
    kf__pCaMKII_Ca0__Ca = p_[44]
    KD__pCaMKII_Ca3__Ca = p_[45]
    KD__pCaMKII_Ca2__Ca = p_[46]
    KD__pCaMKII_Ca1__Ca = p_[47]
    KD__pCaMKII_Ca0__Ca = p_[48]
    KD__CaM_Ca4__pCaMKIIaut = p_[49]
    kp__pairedCaMKIIc__CaMKIIc = p_[50]
    kf__PP1__pCaMKIIaut = p_[51]
    kr__PP1__pCaMKIIaut = p_[52]
    kcat__PP1__pCaMKIIaut = p_[53]
    Ca_set     = p_[54]
    PP1_0      = p_[55]
    CaMKII_0   = p_[56]
    CaM_0      = p_[57]
    PP2B_0     = p_[58]

    KD__CaM_Ca3__PP2B = KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__PP2B = KD__CaM_Ca2__Ca*KD__CaM_Ca3__PP2B/KD__PP2B_CaM_Ca2__Ca
    KD__CaM_Ca1__PP2B = 1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca1__Ca*KD__CaM_Ca2__PP2B
    KD__CaM__PP2B = 1.0/KD__PP2B_CaM__Ca*KD__CaM__Ca*KD__CaM_Ca1__PP2B
    KD__CaM_Ca3__CaMKII = KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    KD__CaM_Ca2__CaMKII = KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca3__CaMKII
    KD__CaM_Ca1__CaMKII = KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca2__CaMKII
    KD__CaM__CaMKII = KD__CaM_Ca1__CaMKII*KD__CaM__Ca/KD__CaMKII_CaM__Ca
    KD__CaM_Ca3__pCaMKIIaut = 1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__Ca/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__pCaMKIIaut
    KD__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca
    KD__CaM__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*KD__CaM__Ca/KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca3__Ca = kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    kr__CaM_Ca2__Ca = KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca
    kr__CaM_Ca1__Ca = kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    kr__CaM__Ca = KD__CaM__Ca*kf__CaM__Ca
    kr__CaM_Ca4__PP2B = KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B
    kr__CaM_Ca3__PP2B = kf__CaM_Ca3__PP2B*KD__CaM_Ca3__PP2B
    kr__CaM_Ca2__PP2B = KD__CaM_Ca2__PP2B*kf__CaM_Ca2__PP2B
    kr__CaM_Ca1__PP2B = kf__CaM_Ca1__PP2B*KD__CaM_Ca1__PP2B
    kr__CaM__PP2B = kf__CaM__PP2B*KD__CaM__PP2B
    kr__PP2B_CaM_Ca3__Ca = KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca
    kr__PP2B_CaM_Ca2__Ca = kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca
    kr__PP2B_CaM_Ca1__Ca = KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    kr__PP2B_CaM__Ca = KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca
    kr__CaM_Ca4__CaMKII = kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII
    kr__CaM_Ca3__CaMKII = kf__CaM_Ca3__CaMKII*KD__CaM_Ca3__CaMKII
    kr__CaM_Ca2__CaMKII = kf__CaM_Ca2__CaMKII*KD__CaM_Ca2__CaMKII
    kr__CaM_Ca1__CaMKII = KD__CaM_Ca1__CaMKII*kf__CaM_Ca1__CaMKII
    kr__CaM__CaMKII = KD__CaM__CaMKII*kf__CaM__CaMKII
    kr__CaMKII_CaM_Ca3__Ca = kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca
    kr__CaMKII_CaM_Ca2__Ca = kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca
    kr__CaMKII_CaM_Ca1__Ca = kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca
    kr__CaMKII_CaM__Ca = kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca
    kr__pCaMKII_Ca3__Ca = KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca
    kr__pCaMKII_Ca2__Ca = KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca
    kr__pCaMKII_Ca1__Ca = kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca
    kr__pCaMKII_Ca0__Ca = kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca4__pCaMKIIaut = KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut
    kr__CaM_Ca3__pCaMKIIaut = kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__pCaMKIIaut
    kr__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*kf__CaM_Ca2__pCaMKIIaut
    kr__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut
    kr__CaM__pCaMKIIaut = kf__CaM__pCaMKIIaut*KD__CaM__pCaMKIIaut
    logistic = 1.0/( exp(-10.0*t)+1.0)
    Ca = logistic*Ca_set
    PP1 = -PP1__pCaMKIIaut+PP1_0
    CaMKII = -PP1_0-pCaMKII_Ca2-pCaMKII-CaMKII_CaM_Ca2+CaMKII_0-pCaMKII_Ca1-pCaMKIIaut-CaMKII_CaM_Ca3-CaMKII_CaM-pCaMKII_Ca0-pCaMKII_Ca3+PP1-CaMKIIc-CaMKII_CaM_Ca1
    CaM = -PP2B_CaM_Ca3+PP1_0-PP2B_CaM+CaMKII-CaM_Ca2-PP2Bc-CaMKII_0-PP2B_CaM_Ca1-CaM_Ca3+pCaMKIIaut+CaM_0-PP2B_CaM_Ca2-CaM_Ca4-PP1-CaM_Ca1
    PP2B =  PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2
    totalCaMKII =  pCaMKII_Ca2+CaMKII+pCaMKII+CaMKII_CaM_Ca2+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1
    ActiveCaMKII =  pCaMKII_Ca2+pCaMKII+pCaMKII_Ca1+pCaMKIIaut+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc
    r = 1.0/( totalCaMKII+s)*( pCaMKII+CaMKIIc)
    pairedCaMKIIc = 1.0/( b*r+1.0)*a*(r*r)
    ReactionFlux1 = -kr__CaM__Ca*CaM_Ca1+CaM*Ca*kf__CaM__Ca
    ReactionFlux2 = -CaM_Ca2*kr__CaM_Ca1__Ca+kf__CaM_Ca1__Ca*Ca*CaM_Ca1
    ReactionFlux3 =  CaM_Ca2*kf__CaM_Ca2__Ca*Ca-CaM_Ca3*kr__CaM_Ca2__Ca
    ReactionFlux4 = -kr__CaM_Ca3__Ca*CaM_Ca4+CaM_Ca3*Ca*kf__CaM_Ca3__Ca
    ReactionFlux5 =  kf__CaM__PP2B*CaM*PP2B-PP2B_CaM*kr__CaM__PP2B
    ReactionFlux6 = -PP2B_CaM_Ca1*kr__CaM_Ca1__PP2B+kf__CaM_Ca1__PP2B*PP2B*CaM_Ca1
    ReactionFlux7 =  CaM_Ca2*kf__CaM_Ca2__PP2B*PP2B-kr__CaM_Ca2__PP2B*PP2B_CaM_Ca2
    ReactionFlux8 = -PP2B_CaM_Ca3*kr__CaM_Ca3__PP2B+kf__CaM_Ca3__PP2B*CaM_Ca3*PP2B
    ReactionFlux9 = -PP2Bc*kr__CaM_Ca4__PP2B+kf__CaM_Ca4__PP2B*PP2B*CaM_Ca4
    ReactionFlux10 =  PP2B_CaM*Ca*kf__PP2B_CaM__Ca-PP2B_CaM_Ca1*kr__PP2B_CaM__Ca
    ReactionFlux11 =  PP2B_CaM_Ca1*Ca*kf__PP2B_CaM_Ca1__Ca-kr__PP2B_CaM_Ca1__Ca*PP2B_CaM_Ca2
    ReactionFlux12 = -PP2B_CaM_Ca3*kr__PP2B_CaM_Ca2__Ca+kf__PP2B_CaM_Ca2__Ca*Ca*PP2B_CaM_Ca2
    ReactionFlux13 =  PP2B_CaM_Ca3*Ca*kf__PP2B_CaM_Ca3__Ca-kr__PP2B_CaM_Ca3__Ca*PP2Bc
    ReactionFlux14 = -kr__CaM__CaMKII*CaMKII_CaM+CaMKII*CaM*kf__CaM__CaMKII
    ReactionFlux15 = -kr__CaM_Ca1__CaMKII*CaMKII_CaM_Ca1+CaMKII*kf__CaM_Ca1__CaMKII*CaM_Ca1
    ReactionFlux16 =  CaMKII*CaM_Ca2*kf__CaM_Ca2__CaMKII-CaMKII_CaM_Ca2*kr__CaM_Ca2__CaMKII
    ReactionFlux17 = -CaMKII_CaM_Ca3*kr__CaM_Ca3__CaMKII+kf__CaM_Ca3__CaMKII*CaMKII*CaM_Ca3
    ReactionFlux18 =  CaMKII*kf__CaM_Ca4__CaMKII*CaM_Ca4-kr__CaM_Ca4__CaMKII*CaMKIIc
    ReactionFlux19 =  Ca*CaMKII_CaM*kf__CaMKII_CaM__Ca-kr__CaMKII_CaM__Ca*CaMKII_CaM_Ca1
    ReactionFlux20 =  Ca*kf__CaMKII_CaM_Ca1__Ca*CaMKII_CaM_Ca1-CaMKII_CaM_Ca2*kr__CaMKII_CaM_Ca1__Ca
    ReactionFlux21 = -kr__CaMKII_CaM_Ca2__Ca*CaMKII_CaM_Ca3+CaMKII_CaM_Ca2*kf__CaMKII_CaM_Ca2__Ca*Ca
    ReactionFlux22 =  Ca*CaMKII_CaM_Ca3*kf__CaMKII_CaM_Ca3__Ca-kr__CaMKII_CaM_Ca3__Ca*CaMKIIc
    ReactionFlux23 =  kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut*CaM_Ca4-pCaMKII*kr__CaM_Ca4__pCaMKIIaut
    ReactionFlux24 =  kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3*pCaMKIIaut-kr__CaM_Ca3__pCaMKIIaut*pCaMKII_Ca3
    ReactionFlux25 =  kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2*pCaMKIIaut-pCaMKII_Ca2*kr__CaM_Ca2__pCaMKIIaut
    ReactionFlux26 = -kr__CaM_Ca1__pCaMKIIaut*pCaMKII_Ca1+pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    ReactionFlux27 = -pCaMKII_Ca0*kr__CaM__pCaMKIIaut+CaM*pCaMKIIaut*kf__CaM__pCaMKIIaut
    ReactionFlux28 =  Ca*kf__pCaMKII_Ca0__Ca*pCaMKII_Ca0-kr__pCaMKII_Ca0__Ca*pCaMKII_Ca1
    ReactionFlux29 = -pCaMKII_Ca2*kr__pCaMKII_Ca1__Ca+kf__pCaMKII_Ca1__Ca*pCaMKII_Ca1*Ca
    ReactionFlux30 = -kr__pCaMKII_Ca2__Ca*pCaMKII_Ca3+pCaMKII_Ca2*Ca*kf__pCaMKII_Ca2__Ca
    ReactionFlux31 = -kr__pCaMKII_Ca3__Ca*pCaMKII+kf__pCaMKII_Ca3__Ca*Ca*pCaMKII_Ca3
    ReactionFlux32 = kp__pairedCaMKIIc__CaMKIIc*CaMKIIc*pairedCaMKIIc
    ReactionFlux33 =  pCaMKIIaut*PP1*kf__PP1__pCaMKIIaut-PP1__pCaMKIIaut*kr__PP1__pCaMKIIaut
    ReactionFlux34 = PP1__pCaMKIIaut*kcat__PP1__pCaMKIIaut

    return 1.0/( PP2B_CaM_Ca3+PP2B_CaM+pCaMKII_Ca2+CaM_Ca2+pCaMKII+CaMKII_CaM_Ca2+PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+CaM+CaM_Ca3+CaMKII_CaM_Ca3+CaMKII_CaM+PP2B_CaM_Ca2+pCaMKII_Ca0+CaM_Ca4+pCaMKII_Ca3+CaM_Ca1+CaMKIIc+s+CaMKII_CaM_Ca1)*( 3.0000000000000000e+00*PP2B_CaM_Ca3+2.0000000000000000e+00*pCaMKII_Ca2+2.0000000000000000e+00*CaM_Ca2+4.0000000000000000e+00*pCaMKII+2.0000000000000000e+00*CaMKII_CaM_Ca2+4.0000000000000000e+00*PP2Bc+PP2B_CaM_Ca1+pCaMKII_Ca1+3.0000000000000000e+00*CaM_Ca3+3.0000000000000000e+00*CaMKII_CaM_Ca3+2.0000000000000000e+00*PP2B_CaM_Ca2+4.0000000000000000e+00*CaM_Ca4+3.0000000000000000e+00*pCaMKII_Ca3+CaM_Ca1+4.0000000000000000e+00*CaMKIIc+CaMKII_CaM_Ca1)

#
# User function: AutoCamkiiPercentage
#

def AutoCamkiiPercentage(y_, t_, p_):
    """
    The user-defined function "AutoCamkiiPercentage" for the vector field "CaMKIIs"
    Arguments:
        y_ :  vector of the state variables:
                  y_[0] is CaM_Ca1
                  y_[1] is CaM_Ca2
                  y_[2] is CaM_Ca3
                  y_[3] is CaM_Ca4
                  y_[4] is PP2B_CaM
                  y_[5] is PP2B_CaM_Ca1
                  y_[6] is PP2B_CaM_Ca2
                  y_[7] is PP2B_CaM_Ca3
                  y_[8] is PP2Bc
                  y_[9] is CaMKII_CaM
                  y_[10] is CaMKII_CaM_Ca1
                  y_[11] is CaMKII_CaM_Ca2
                  y_[12] is CaMKII_CaM_Ca3
                  y_[13] is CaMKIIc
                  y_[14] is pCaMKII
                  y_[15] is pCaMKIIaut
                  y_[16] is pCaMKII_Ca3
                  y_[17] is pCaMKII_Ca2
                  y_[18] is pCaMKII_Ca1
                  y_[19] is pCaMKII_Ca0
                  y_[20] is PP1__pCaMKIIaut
        t_ :  time
        p_ :  vector of the parameters
                  p_[0] is kf__CaM__Ca
                  p_[1] is kf__CaM_Ca1__Ca
                  p_[2] is kf__CaM_Ca2__Ca
                  p_[3] is kf__CaM_Ca3__Ca
                  p_[4] is kf__CaM__PP2B
                  p_[5] is kf__CaM_Ca1__PP2B
                  p_[6] is kf__CaM_Ca2__PP2B
                  p_[7] is kf__CaM_Ca3__PP2B
                  p_[8] is kf__CaM_Ca4__PP2B
                  p_[9] is kf__PP2B_CaM__Ca
                  p_[10] is kf__PP2B_CaM_Ca1__Ca
                  p_[11] is kf__PP2B_CaM_Ca2__Ca
                  p_[12] is kf__PP2B_CaM_Ca3__Ca
                  p_[13] is KD__CaM_Ca3__Ca
                  p_[14] is KD__CaM_Ca2__Ca
                  p_[15] is KD__CaM_Ca1__Ca
                  p_[16] is KD__CaM__Ca
                  p_[17] is KD__CaM_Ca4__PP2B
                  p_[18] is KD__PP2B_CaM_Ca3__Ca
                  p_[19] is KD__PP2B_CaM_Ca2__Ca
                  p_[20] is KD__PP2B_CaM_Ca1__Ca
                  p_[21] is KD__PP2B_CaM__Ca
                  p_[22] is kf__CaM__CaMKII
                  p_[23] is kf__CaMKII_CaM_Ca3__Ca
                  p_[24] is kf__CaMKII_CaM_Ca2__Ca
                  p_[25] is kf__CaMKII_CaM_Ca1__Ca
                  p_[26] is kf__CaMKII_CaM__Ca
                  p_[27] is kf__CaM_Ca1__CaMKII
                  p_[28] is kf__CaM_Ca2__CaMKII
                  p_[29] is kf__CaM_Ca3__CaMKII
                  p_[30] is kf__CaM_Ca4__CaMKII
                  p_[31] is KD__CaM_Ca4__CaMKII
                  p_[32] is KD__CaMKII_CaM_Ca3__Ca
                  p_[33] is KD__CaMKII_CaM_Ca2__Ca
                  p_[34] is KD__CaMKII_CaM_Ca1__Ca
                  p_[35] is KD__CaMKII_CaM__Ca
                  p_[36] is kf__pCaMKII_Ca3__Ca
                  p_[37] is kf__CaM__pCaMKIIaut
                  p_[38] is kf__CaM_Ca1__pCaMKIIaut
                  p_[39] is kf__CaM_Ca2__pCaMKIIaut
                  p_[40] is kf__CaM_Ca3__pCaMKIIaut
                  p_[41] is kf__pCaMKII_Ca2__Ca
                  p_[42] is kf__pCaMKII_Ca1__Ca
                  p_[43] is kf__CaM_Ca4__pCaMKIIaut
                  p_[44] is kf__pCaMKII_Ca0__Ca
                  p_[45] is KD__pCaMKII_Ca3__Ca
                  p_[46] is KD__pCaMKII_Ca2__Ca
                  p_[47] is KD__pCaMKII_Ca1__Ca
                  p_[48] is KD__pCaMKII_Ca0__Ca
                  p_[49] is KD__CaM_Ca4__pCaMKIIaut
                  p_[50] is kp__pairedCaMKIIc__CaMKIIc
                  p_[51] is kf__PP1__pCaMKIIaut
                  p_[52] is kr__PP1__pCaMKIIaut
                  p_[53] is kcat__PP1__pCaMKIIaut
                  p_[54] is Ca_set
                  p_[55] is PP1_0
                  p_[56] is CaMKII_0
                  p_[57] is CaM_0
                  p_[58] is PP2B_0
    """
    s = 1.0000000000000001e-05;
    a = 3.9026399999999999e+00;
    b = 2.8697200000000000e+00;
    CaM_Ca1    = y_[0]
    CaM_Ca2    = y_[1]
    CaM_Ca3    = y_[2]
    CaM_Ca4    = y_[3]
    PP2B_CaM   = y_[4]
    PP2B_CaM_Ca1 = y_[5]
    PP2B_CaM_Ca2 = y_[6]
    PP2B_CaM_Ca3 = y_[7]
    PP2Bc      = y_[8]
    CaMKII_CaM = y_[9]
    CaMKII_CaM_Ca1 = y_[10]
    CaMKII_CaM_Ca2 = y_[11]
    CaMKII_CaM_Ca3 = y_[12]
    CaMKIIc    = y_[13]
    pCaMKII    = y_[14]
    pCaMKIIaut = y_[15]
    pCaMKII_Ca3 = y_[16]
    pCaMKII_Ca2 = y_[17]
    pCaMKII_Ca1 = y_[18]
    pCaMKII_Ca0 = y_[19]
    PP1__pCaMKIIaut = y_[20]

    kf__CaM__Ca = p_[0]
    kf__CaM_Ca1__Ca = p_[1]
    kf__CaM_Ca2__Ca = p_[2]
    kf__CaM_Ca3__Ca = p_[3]
    kf__CaM__PP2B = p_[4]
    kf__CaM_Ca1__PP2B = p_[5]
    kf__CaM_Ca2__PP2B = p_[6]
    kf__CaM_Ca3__PP2B = p_[7]
    kf__CaM_Ca4__PP2B = p_[8]
    kf__PP2B_CaM__Ca = p_[9]
    kf__PP2B_CaM_Ca1__Ca = p_[10]
    kf__PP2B_CaM_Ca2__Ca = p_[11]
    kf__PP2B_CaM_Ca3__Ca = p_[12]
    KD__CaM_Ca3__Ca = p_[13]
    KD__CaM_Ca2__Ca = p_[14]
    KD__CaM_Ca1__Ca = p_[15]
    KD__CaM__Ca = p_[16]
    KD__CaM_Ca4__PP2B = p_[17]
    KD__PP2B_CaM_Ca3__Ca = p_[18]
    KD__PP2B_CaM_Ca2__Ca = p_[19]
    KD__PP2B_CaM_Ca1__Ca = p_[20]
    KD__PP2B_CaM__Ca = p_[21]
    kf__CaM__CaMKII = p_[22]
    kf__CaMKII_CaM_Ca3__Ca = p_[23]
    kf__CaMKII_CaM_Ca2__Ca = p_[24]
    kf__CaMKII_CaM_Ca1__Ca = p_[25]
    kf__CaMKII_CaM__Ca = p_[26]
    kf__CaM_Ca1__CaMKII = p_[27]
    kf__CaM_Ca2__CaMKII = p_[28]
    kf__CaM_Ca3__CaMKII = p_[29]
    kf__CaM_Ca4__CaMKII = p_[30]
    KD__CaM_Ca4__CaMKII = p_[31]
    KD__CaMKII_CaM_Ca3__Ca = p_[32]
    KD__CaMKII_CaM_Ca2__Ca = p_[33]
    KD__CaMKII_CaM_Ca1__Ca = p_[34]
    KD__CaMKII_CaM__Ca = p_[35]
    kf__pCaMKII_Ca3__Ca = p_[36]
    kf__CaM__pCaMKIIaut = p_[37]
    kf__CaM_Ca1__pCaMKIIaut = p_[38]
    kf__CaM_Ca2__pCaMKIIaut = p_[39]
    kf__CaM_Ca3__pCaMKIIaut = p_[40]
    kf__pCaMKII_Ca2__Ca = p_[41]
    kf__pCaMKII_Ca1__Ca = p_[42]
    kf__CaM_Ca4__pCaMKIIaut = p_[43]
    kf__pCaMKII_Ca0__Ca = p_[44]
    KD__pCaMKII_Ca3__Ca = p_[45]
    KD__pCaMKII_Ca2__Ca = p_[46]
    KD__pCaMKII_Ca1__Ca = p_[47]
    KD__pCaMKII_Ca0__Ca = p_[48]
    KD__CaM_Ca4__pCaMKIIaut = p_[49]
    kp__pairedCaMKIIc__CaMKIIc = p_[50]
    kf__PP1__pCaMKIIaut = p_[51]
    kr__PP1__pCaMKIIaut = p_[52]
    kcat__PP1__pCaMKIIaut = p_[53]
    Ca_set     = p_[54]
    PP1_0      = p_[55]
    CaMKII_0   = p_[56]
    CaM_0      = p_[57]
    PP2B_0     = p_[58]

    KD__CaM_Ca3__PP2B = KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__PP2B = KD__CaM_Ca2__Ca*KD__CaM_Ca3__PP2B/KD__PP2B_CaM_Ca2__Ca
    KD__CaM_Ca1__PP2B = 1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca1__Ca*KD__CaM_Ca2__PP2B
    KD__CaM__PP2B = 1.0/KD__PP2B_CaM__Ca*KD__CaM__Ca*KD__CaM_Ca1__PP2B
    KD__CaM_Ca3__CaMKII = KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    KD__CaM_Ca2__CaMKII = KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca3__CaMKII
    KD__CaM_Ca1__CaMKII = KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca2__CaMKII
    KD__CaM__CaMKII = KD__CaM_Ca1__CaMKII*KD__CaM__Ca/KD__CaMKII_CaM__Ca
    KD__CaM_Ca3__pCaMKIIaut = 1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__Ca/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__pCaMKIIaut
    KD__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca
    KD__CaM__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*KD__CaM__Ca/KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca3__Ca = kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    kr__CaM_Ca2__Ca = KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca
    kr__CaM_Ca1__Ca = kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    kr__CaM__Ca = KD__CaM__Ca*kf__CaM__Ca
    kr__CaM_Ca4__PP2B = KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B
    kr__CaM_Ca3__PP2B = kf__CaM_Ca3__PP2B*KD__CaM_Ca3__PP2B
    kr__CaM_Ca2__PP2B = KD__CaM_Ca2__PP2B*kf__CaM_Ca2__PP2B
    kr__CaM_Ca1__PP2B = kf__CaM_Ca1__PP2B*KD__CaM_Ca1__PP2B
    kr__CaM__PP2B = kf__CaM__PP2B*KD__CaM__PP2B
    kr__PP2B_CaM_Ca3__Ca = KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca
    kr__PP2B_CaM_Ca2__Ca = kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca
    kr__PP2B_CaM_Ca1__Ca = KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    kr__PP2B_CaM__Ca = KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca
    kr__CaM_Ca4__CaMKII = kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII
    kr__CaM_Ca3__CaMKII = kf__CaM_Ca3__CaMKII*KD__CaM_Ca3__CaMKII
    kr__CaM_Ca2__CaMKII = kf__CaM_Ca2__CaMKII*KD__CaM_Ca2__CaMKII
    kr__CaM_Ca1__CaMKII = KD__CaM_Ca1__CaMKII*kf__CaM_Ca1__CaMKII
    kr__CaM__CaMKII = KD__CaM__CaMKII*kf__CaM__CaMKII
    kr__CaMKII_CaM_Ca3__Ca = kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca
    kr__CaMKII_CaM_Ca2__Ca = kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca
    kr__CaMKII_CaM_Ca1__Ca = kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca
    kr__CaMKII_CaM__Ca = kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca
    kr__pCaMKII_Ca3__Ca = KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca
    kr__pCaMKII_Ca2__Ca = KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca
    kr__pCaMKII_Ca1__Ca = kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca
    kr__pCaMKII_Ca0__Ca = kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca4__pCaMKIIaut = KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut
    kr__CaM_Ca3__pCaMKIIaut = kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__pCaMKIIaut
    kr__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*kf__CaM_Ca2__pCaMKIIaut
    kr__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut
    kr__CaM__pCaMKIIaut = kf__CaM__pCaMKIIaut*KD__CaM__pCaMKIIaut
    logistic = 1.0/( exp(-10.0*t)+1.0)
    Ca = logistic*Ca_set
    PP1 = -PP1__pCaMKIIaut+PP1_0
    CaMKII = -PP1_0-pCaMKII_Ca2-pCaMKII-CaMKII_CaM_Ca2+CaMKII_0-pCaMKII_Ca1-pCaMKIIaut-CaMKII_CaM_Ca3-CaMKII_CaM-pCaMKII_Ca0-pCaMKII_Ca3+PP1-CaMKIIc-CaMKII_CaM_Ca1
    CaM = -PP2B_CaM_Ca3+PP1_0-PP2B_CaM+CaMKII-CaM_Ca2-PP2Bc-CaMKII_0-PP2B_CaM_Ca1-CaM_Ca3+pCaMKIIaut+CaM_0-PP2B_CaM_Ca2-CaM_Ca4-PP1-CaM_Ca1
    PP2B =  PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2
    totalCaMKII =  pCaMKII_Ca2+CaMKII+pCaMKII+CaMKII_CaM_Ca2+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1
    ActiveCaMKII =  pCaMKII_Ca2+pCaMKII+pCaMKII_Ca1+pCaMKIIaut+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc
    r = 1.0/( totalCaMKII+s)*( pCaMKII+CaMKIIc)
    pairedCaMKIIc = 1.0/( b*r+1.0)*a*(r*r)
    ReactionFlux1 = -kr__CaM__Ca*CaM_Ca1+CaM*Ca*kf__CaM__Ca
    ReactionFlux2 = -CaM_Ca2*kr__CaM_Ca1__Ca+kf__CaM_Ca1__Ca*Ca*CaM_Ca1
    ReactionFlux3 =  CaM_Ca2*kf__CaM_Ca2__Ca*Ca-CaM_Ca3*kr__CaM_Ca2__Ca
    ReactionFlux4 = -kr__CaM_Ca3__Ca*CaM_Ca4+CaM_Ca3*Ca*kf__CaM_Ca3__Ca
    ReactionFlux5 =  kf__CaM__PP2B*CaM*PP2B-PP2B_CaM*kr__CaM__PP2B
    ReactionFlux6 = -PP2B_CaM_Ca1*kr__CaM_Ca1__PP2B+kf__CaM_Ca1__PP2B*PP2B*CaM_Ca1
    ReactionFlux7 =  CaM_Ca2*kf__CaM_Ca2__PP2B*PP2B-kr__CaM_Ca2__PP2B*PP2B_CaM_Ca2
    ReactionFlux8 = -PP2B_CaM_Ca3*kr__CaM_Ca3__PP2B+kf__CaM_Ca3__PP2B*CaM_Ca3*PP2B
    ReactionFlux9 = -PP2Bc*kr__CaM_Ca4__PP2B+kf__CaM_Ca4__PP2B*PP2B*CaM_Ca4
    ReactionFlux10 =  PP2B_CaM*Ca*kf__PP2B_CaM__Ca-PP2B_CaM_Ca1*kr__PP2B_CaM__Ca
    ReactionFlux11 =  PP2B_CaM_Ca1*Ca*kf__PP2B_CaM_Ca1__Ca-kr__PP2B_CaM_Ca1__Ca*PP2B_CaM_Ca2
    ReactionFlux12 = -PP2B_CaM_Ca3*kr__PP2B_CaM_Ca2__Ca+kf__PP2B_CaM_Ca2__Ca*Ca*PP2B_CaM_Ca2
    ReactionFlux13 =  PP2B_CaM_Ca3*Ca*kf__PP2B_CaM_Ca3__Ca-kr__PP2B_CaM_Ca3__Ca*PP2Bc
    ReactionFlux14 = -kr__CaM__CaMKII*CaMKII_CaM+CaMKII*CaM*kf__CaM__CaMKII
    ReactionFlux15 = -kr__CaM_Ca1__CaMKII*CaMKII_CaM_Ca1+CaMKII*kf__CaM_Ca1__CaMKII*CaM_Ca1
    ReactionFlux16 =  CaMKII*CaM_Ca2*kf__CaM_Ca2__CaMKII-CaMKII_CaM_Ca2*kr__CaM_Ca2__CaMKII
    ReactionFlux17 = -CaMKII_CaM_Ca3*kr__CaM_Ca3__CaMKII+kf__CaM_Ca3__CaMKII*CaMKII*CaM_Ca3
    ReactionFlux18 =  CaMKII*kf__CaM_Ca4__CaMKII*CaM_Ca4-kr__CaM_Ca4__CaMKII*CaMKIIc
    ReactionFlux19 =  Ca*CaMKII_CaM*kf__CaMKII_CaM__Ca-kr__CaMKII_CaM__Ca*CaMKII_CaM_Ca1
    ReactionFlux20 =  Ca*kf__CaMKII_CaM_Ca1__Ca*CaMKII_CaM_Ca1-CaMKII_CaM_Ca2*kr__CaMKII_CaM_Ca1__Ca
    ReactionFlux21 = -kr__CaMKII_CaM_Ca2__Ca*CaMKII_CaM_Ca3+CaMKII_CaM_Ca2*kf__CaMKII_CaM_Ca2__Ca*Ca
    ReactionFlux22 =  Ca*CaMKII_CaM_Ca3*kf__CaMKII_CaM_Ca3__Ca-kr__CaMKII_CaM_Ca3__Ca*CaMKIIc
    ReactionFlux23 =  kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut*CaM_Ca4-pCaMKII*kr__CaM_Ca4__pCaMKIIaut
    ReactionFlux24 =  kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3*pCaMKIIaut-kr__CaM_Ca3__pCaMKIIaut*pCaMKII_Ca3
    ReactionFlux25 =  kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2*pCaMKIIaut-pCaMKII_Ca2*kr__CaM_Ca2__pCaMKIIaut
    ReactionFlux26 = -kr__CaM_Ca1__pCaMKIIaut*pCaMKII_Ca1+pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    ReactionFlux27 = -pCaMKII_Ca0*kr__CaM__pCaMKIIaut+CaM*pCaMKIIaut*kf__CaM__pCaMKIIaut
    ReactionFlux28 =  Ca*kf__pCaMKII_Ca0__Ca*pCaMKII_Ca0-kr__pCaMKII_Ca0__Ca*pCaMKII_Ca1
    ReactionFlux29 = -pCaMKII_Ca2*kr__pCaMKII_Ca1__Ca+kf__pCaMKII_Ca1__Ca*pCaMKII_Ca1*Ca
    ReactionFlux30 = -kr__pCaMKII_Ca2__Ca*pCaMKII_Ca3+pCaMKII_Ca2*Ca*kf__pCaMKII_Ca2__Ca
    ReactionFlux31 = -kr__pCaMKII_Ca3__Ca*pCaMKII+kf__pCaMKII_Ca3__Ca*Ca*pCaMKII_Ca3
    ReactionFlux32 = kp__pairedCaMKIIc__CaMKIIc*CaMKIIc*pairedCaMKIIc
    ReactionFlux33 =  pCaMKIIaut*PP1*kf__PP1__pCaMKIIaut-PP1__pCaMKIIaut*kr__PP1__pCaMKIIaut
    ReactionFlux34 = PP1__pCaMKIIaut*kcat__PP1__pCaMKIIaut

    return 100.0*1.0/( totalCaMKII+s)*( pCaMKII_Ca2+pCaMKII+pCaMKII_Ca1+pCaMKIIaut+pCaMKII_Ca0+pCaMKII_Ca3)

#
# User function: MolCaMPerMolPP2B
#

def MolCaMPerMolPP2B(y_, t_, p_):
    """
    The user-defined function "MolCaMPerMolPP2B" for the vector field "CaMKIIs"
    Arguments:
        y_ :  vector of the state variables:
                  y_[0] is CaM_Ca1
                  y_[1] is CaM_Ca2
                  y_[2] is CaM_Ca3
                  y_[3] is CaM_Ca4
                  y_[4] is PP2B_CaM
                  y_[5] is PP2B_CaM_Ca1
                  y_[6] is PP2B_CaM_Ca2
                  y_[7] is PP2B_CaM_Ca3
                  y_[8] is PP2Bc
                  y_[9] is CaMKII_CaM
                  y_[10] is CaMKII_CaM_Ca1
                  y_[11] is CaMKII_CaM_Ca2
                  y_[12] is CaMKII_CaM_Ca3
                  y_[13] is CaMKIIc
                  y_[14] is pCaMKII
                  y_[15] is pCaMKIIaut
                  y_[16] is pCaMKII_Ca3
                  y_[17] is pCaMKII_Ca2
                  y_[18] is pCaMKII_Ca1
                  y_[19] is pCaMKII_Ca0
                  y_[20] is PP1__pCaMKIIaut
        t_ :  time
        p_ :  vector of the parameters
                  p_[0] is kf__CaM__Ca
                  p_[1] is kf__CaM_Ca1__Ca
                  p_[2] is kf__CaM_Ca2__Ca
                  p_[3] is kf__CaM_Ca3__Ca
                  p_[4] is kf__CaM__PP2B
                  p_[5] is kf__CaM_Ca1__PP2B
                  p_[6] is kf__CaM_Ca2__PP2B
                  p_[7] is kf__CaM_Ca3__PP2B
                  p_[8] is kf__CaM_Ca4__PP2B
                  p_[9] is kf__PP2B_CaM__Ca
                  p_[10] is kf__PP2B_CaM_Ca1__Ca
                  p_[11] is kf__PP2B_CaM_Ca2__Ca
                  p_[12] is kf__PP2B_CaM_Ca3__Ca
                  p_[13] is KD__CaM_Ca3__Ca
                  p_[14] is KD__CaM_Ca2__Ca
                  p_[15] is KD__CaM_Ca1__Ca
                  p_[16] is KD__CaM__Ca
                  p_[17] is KD__CaM_Ca4__PP2B
                  p_[18] is KD__PP2B_CaM_Ca3__Ca
                  p_[19] is KD__PP2B_CaM_Ca2__Ca
                  p_[20] is KD__PP2B_CaM_Ca1__Ca
                  p_[21] is KD__PP2B_CaM__Ca
                  p_[22] is kf__CaM__CaMKII
                  p_[23] is kf__CaMKII_CaM_Ca3__Ca
                  p_[24] is kf__CaMKII_CaM_Ca2__Ca
                  p_[25] is kf__CaMKII_CaM_Ca1__Ca
                  p_[26] is kf__CaMKII_CaM__Ca
                  p_[27] is kf__CaM_Ca1__CaMKII
                  p_[28] is kf__CaM_Ca2__CaMKII
                  p_[29] is kf__CaM_Ca3__CaMKII
                  p_[30] is kf__CaM_Ca4__CaMKII
                  p_[31] is KD__CaM_Ca4__CaMKII
                  p_[32] is KD__CaMKII_CaM_Ca3__Ca
                  p_[33] is KD__CaMKII_CaM_Ca2__Ca
                  p_[34] is KD__CaMKII_CaM_Ca1__Ca
                  p_[35] is KD__CaMKII_CaM__Ca
                  p_[36] is kf__pCaMKII_Ca3__Ca
                  p_[37] is kf__CaM__pCaMKIIaut
                  p_[38] is kf__CaM_Ca1__pCaMKIIaut
                  p_[39] is kf__CaM_Ca2__pCaMKIIaut
                  p_[40] is kf__CaM_Ca3__pCaMKIIaut
                  p_[41] is kf__pCaMKII_Ca2__Ca
                  p_[42] is kf__pCaMKII_Ca1__Ca
                  p_[43] is kf__CaM_Ca4__pCaMKIIaut
                  p_[44] is kf__pCaMKII_Ca0__Ca
                  p_[45] is KD__pCaMKII_Ca3__Ca
                  p_[46] is KD__pCaMKII_Ca2__Ca
                  p_[47] is KD__pCaMKII_Ca1__Ca
                  p_[48] is KD__pCaMKII_Ca0__Ca
                  p_[49] is KD__CaM_Ca4__pCaMKIIaut
                  p_[50] is kp__pairedCaMKIIc__CaMKIIc
                  p_[51] is kf__PP1__pCaMKIIaut
                  p_[52] is kr__PP1__pCaMKIIaut
                  p_[53] is kcat__PP1__pCaMKIIaut
                  p_[54] is Ca_set
                  p_[55] is PP1_0
                  p_[56] is CaMKII_0
                  p_[57] is CaM_0
                  p_[58] is PP2B_0
    """
    s = 1.0000000000000001e-05;
    a = 3.9026399999999999e+00;
    b = 2.8697200000000000e+00;
    CaM_Ca1    = y_[0]
    CaM_Ca2    = y_[1]
    CaM_Ca3    = y_[2]
    CaM_Ca4    = y_[3]
    PP2B_CaM   = y_[4]
    PP2B_CaM_Ca1 = y_[5]
    PP2B_CaM_Ca2 = y_[6]
    PP2B_CaM_Ca3 = y_[7]
    PP2Bc      = y_[8]
    CaMKII_CaM = y_[9]
    CaMKII_CaM_Ca1 = y_[10]
    CaMKII_CaM_Ca2 = y_[11]
    CaMKII_CaM_Ca3 = y_[12]
    CaMKIIc    = y_[13]
    pCaMKII    = y_[14]
    pCaMKIIaut = y_[15]
    pCaMKII_Ca3 = y_[16]
    pCaMKII_Ca2 = y_[17]
    pCaMKII_Ca1 = y_[18]
    pCaMKII_Ca0 = y_[19]
    PP1__pCaMKIIaut = y_[20]

    kf__CaM__Ca = p_[0]
    kf__CaM_Ca1__Ca = p_[1]
    kf__CaM_Ca2__Ca = p_[2]
    kf__CaM_Ca3__Ca = p_[3]
    kf__CaM__PP2B = p_[4]
    kf__CaM_Ca1__PP2B = p_[5]
    kf__CaM_Ca2__PP2B = p_[6]
    kf__CaM_Ca3__PP2B = p_[7]
    kf__CaM_Ca4__PP2B = p_[8]
    kf__PP2B_CaM__Ca = p_[9]
    kf__PP2B_CaM_Ca1__Ca = p_[10]
    kf__PP2B_CaM_Ca2__Ca = p_[11]
    kf__PP2B_CaM_Ca3__Ca = p_[12]
    KD__CaM_Ca3__Ca = p_[13]
    KD__CaM_Ca2__Ca = p_[14]
    KD__CaM_Ca1__Ca = p_[15]
    KD__CaM__Ca = p_[16]
    KD__CaM_Ca4__PP2B = p_[17]
    KD__PP2B_CaM_Ca3__Ca = p_[18]
    KD__PP2B_CaM_Ca2__Ca = p_[19]
    KD__PP2B_CaM_Ca1__Ca = p_[20]
    KD__PP2B_CaM__Ca = p_[21]
    kf__CaM__CaMKII = p_[22]
    kf__CaMKII_CaM_Ca3__Ca = p_[23]
    kf__CaMKII_CaM_Ca2__Ca = p_[24]
    kf__CaMKII_CaM_Ca1__Ca = p_[25]
    kf__CaMKII_CaM__Ca = p_[26]
    kf__CaM_Ca1__CaMKII = p_[27]
    kf__CaM_Ca2__CaMKII = p_[28]
    kf__CaM_Ca3__CaMKII = p_[29]
    kf__CaM_Ca4__CaMKII = p_[30]
    KD__CaM_Ca4__CaMKII = p_[31]
    KD__CaMKII_CaM_Ca3__Ca = p_[32]
    KD__CaMKII_CaM_Ca2__Ca = p_[33]
    KD__CaMKII_CaM_Ca1__Ca = p_[34]
    KD__CaMKII_CaM__Ca = p_[35]
    kf__pCaMKII_Ca3__Ca = p_[36]
    kf__CaM__pCaMKIIaut = p_[37]
    kf__CaM_Ca1__pCaMKIIaut = p_[38]
    kf__CaM_Ca2__pCaMKIIaut = p_[39]
    kf__CaM_Ca3__pCaMKIIaut = p_[40]
    kf__pCaMKII_Ca2__Ca = p_[41]
    kf__pCaMKII_Ca1__Ca = p_[42]
    kf__CaM_Ca4__pCaMKIIaut = p_[43]
    kf__pCaMKII_Ca0__Ca = p_[44]
    KD__pCaMKII_Ca3__Ca = p_[45]
    KD__pCaMKII_Ca2__Ca = p_[46]
    KD__pCaMKII_Ca1__Ca = p_[47]
    KD__pCaMKII_Ca0__Ca = p_[48]
    KD__CaM_Ca4__pCaMKIIaut = p_[49]
    kp__pairedCaMKIIc__CaMKIIc = p_[50]
    kf__PP1__pCaMKIIaut = p_[51]
    kr__PP1__pCaMKIIaut = p_[52]
    kcat__PP1__pCaMKIIaut = p_[53]
    Ca_set     = p_[54]
    PP1_0      = p_[55]
    CaMKII_0   = p_[56]
    CaM_0      = p_[57]
    PP2B_0     = p_[58]

    KD__CaM_Ca3__PP2B = KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__PP2B = KD__CaM_Ca2__Ca*KD__CaM_Ca3__PP2B/KD__PP2B_CaM_Ca2__Ca
    KD__CaM_Ca1__PP2B = 1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca1__Ca*KD__CaM_Ca2__PP2B
    KD__CaM__PP2B = 1.0/KD__PP2B_CaM__Ca*KD__CaM__Ca*KD__CaM_Ca1__PP2B
    KD__CaM_Ca3__CaMKII = KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    KD__CaM_Ca2__CaMKII = KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca3__CaMKII
    KD__CaM_Ca1__CaMKII = KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca2__CaMKII
    KD__CaM__CaMKII = KD__CaM_Ca1__CaMKII*KD__CaM__Ca/KD__CaMKII_CaM__Ca
    KD__CaM_Ca3__pCaMKIIaut = 1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__Ca/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__pCaMKIIaut
    KD__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca
    KD__CaM__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*KD__CaM__Ca/KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca3__Ca = kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    kr__CaM_Ca2__Ca = KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca
    kr__CaM_Ca1__Ca = kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    kr__CaM__Ca = KD__CaM__Ca*kf__CaM__Ca
    kr__CaM_Ca4__PP2B = KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B
    kr__CaM_Ca3__PP2B = kf__CaM_Ca3__PP2B*KD__CaM_Ca3__PP2B
    kr__CaM_Ca2__PP2B = KD__CaM_Ca2__PP2B*kf__CaM_Ca2__PP2B
    kr__CaM_Ca1__PP2B = kf__CaM_Ca1__PP2B*KD__CaM_Ca1__PP2B
    kr__CaM__PP2B = kf__CaM__PP2B*KD__CaM__PP2B
    kr__PP2B_CaM_Ca3__Ca = KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca
    kr__PP2B_CaM_Ca2__Ca = kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca
    kr__PP2B_CaM_Ca1__Ca = KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    kr__PP2B_CaM__Ca = KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca
    kr__CaM_Ca4__CaMKII = kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII
    kr__CaM_Ca3__CaMKII = kf__CaM_Ca3__CaMKII*KD__CaM_Ca3__CaMKII
    kr__CaM_Ca2__CaMKII = kf__CaM_Ca2__CaMKII*KD__CaM_Ca2__CaMKII
    kr__CaM_Ca1__CaMKII = KD__CaM_Ca1__CaMKII*kf__CaM_Ca1__CaMKII
    kr__CaM__CaMKII = KD__CaM__CaMKII*kf__CaM__CaMKII
    kr__CaMKII_CaM_Ca3__Ca = kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca
    kr__CaMKII_CaM_Ca2__Ca = kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca
    kr__CaMKII_CaM_Ca1__Ca = kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca
    kr__CaMKII_CaM__Ca = kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca
    kr__pCaMKII_Ca3__Ca = KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca
    kr__pCaMKII_Ca2__Ca = KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca
    kr__pCaMKII_Ca1__Ca = kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca
    kr__pCaMKII_Ca0__Ca = kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca4__pCaMKIIaut = KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut
    kr__CaM_Ca3__pCaMKIIaut = kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__pCaMKIIaut
    kr__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*kf__CaM_Ca2__pCaMKIIaut
    kr__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut
    kr__CaM__pCaMKIIaut = kf__CaM__pCaMKIIaut*KD__CaM__pCaMKIIaut
    logistic = 1.0/( exp(-10.0*t)+1.0)
    Ca = logistic*Ca_set
    PP1 = -PP1__pCaMKIIaut+PP1_0
    CaMKII = -PP1_0-pCaMKII_Ca2-pCaMKII-CaMKII_CaM_Ca2+CaMKII_0-pCaMKII_Ca1-pCaMKIIaut-CaMKII_CaM_Ca3-CaMKII_CaM-pCaMKII_Ca0-pCaMKII_Ca3+PP1-CaMKIIc-CaMKII_CaM_Ca1
    CaM = -PP2B_CaM_Ca3+PP1_0-PP2B_CaM+CaMKII-CaM_Ca2-PP2Bc-CaMKII_0-PP2B_CaM_Ca1-CaM_Ca3+pCaMKIIaut+CaM_0-PP2B_CaM_Ca2-CaM_Ca4-PP1-CaM_Ca1
    PP2B =  PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2
    totalCaMKII =  pCaMKII_Ca2+CaMKII+pCaMKII+CaMKII_CaM_Ca2+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1
    ActiveCaMKII =  pCaMKII_Ca2+pCaMKII+pCaMKII_Ca1+pCaMKIIaut+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc
    r = 1.0/( totalCaMKII+s)*( pCaMKII+CaMKIIc)
    pairedCaMKIIc = 1.0/( b*r+1.0)*a*(r*r)
    ReactionFlux1 = -kr__CaM__Ca*CaM_Ca1+CaM*Ca*kf__CaM__Ca
    ReactionFlux2 = -CaM_Ca2*kr__CaM_Ca1__Ca+kf__CaM_Ca1__Ca*Ca*CaM_Ca1
    ReactionFlux3 =  CaM_Ca2*kf__CaM_Ca2__Ca*Ca-CaM_Ca3*kr__CaM_Ca2__Ca
    ReactionFlux4 = -kr__CaM_Ca3__Ca*CaM_Ca4+CaM_Ca3*Ca*kf__CaM_Ca3__Ca
    ReactionFlux5 =  kf__CaM__PP2B*CaM*PP2B-PP2B_CaM*kr__CaM__PP2B
    ReactionFlux6 = -PP2B_CaM_Ca1*kr__CaM_Ca1__PP2B+kf__CaM_Ca1__PP2B*PP2B*CaM_Ca1
    ReactionFlux7 =  CaM_Ca2*kf__CaM_Ca2__PP2B*PP2B-kr__CaM_Ca2__PP2B*PP2B_CaM_Ca2
    ReactionFlux8 = -PP2B_CaM_Ca3*kr__CaM_Ca3__PP2B+kf__CaM_Ca3__PP2B*CaM_Ca3*PP2B
    ReactionFlux9 = -PP2Bc*kr__CaM_Ca4__PP2B+kf__CaM_Ca4__PP2B*PP2B*CaM_Ca4
    ReactionFlux10 =  PP2B_CaM*Ca*kf__PP2B_CaM__Ca-PP2B_CaM_Ca1*kr__PP2B_CaM__Ca
    ReactionFlux11 =  PP2B_CaM_Ca1*Ca*kf__PP2B_CaM_Ca1__Ca-kr__PP2B_CaM_Ca1__Ca*PP2B_CaM_Ca2
    ReactionFlux12 = -PP2B_CaM_Ca3*kr__PP2B_CaM_Ca2__Ca+kf__PP2B_CaM_Ca2__Ca*Ca*PP2B_CaM_Ca2
    ReactionFlux13 =  PP2B_CaM_Ca3*Ca*kf__PP2B_CaM_Ca3__Ca-kr__PP2B_CaM_Ca3__Ca*PP2Bc
    ReactionFlux14 = -kr__CaM__CaMKII*CaMKII_CaM+CaMKII*CaM*kf__CaM__CaMKII
    ReactionFlux15 = -kr__CaM_Ca1__CaMKII*CaMKII_CaM_Ca1+CaMKII*kf__CaM_Ca1__CaMKII*CaM_Ca1
    ReactionFlux16 =  CaMKII*CaM_Ca2*kf__CaM_Ca2__CaMKII-CaMKII_CaM_Ca2*kr__CaM_Ca2__CaMKII
    ReactionFlux17 = -CaMKII_CaM_Ca3*kr__CaM_Ca3__CaMKII+kf__CaM_Ca3__CaMKII*CaMKII*CaM_Ca3
    ReactionFlux18 =  CaMKII*kf__CaM_Ca4__CaMKII*CaM_Ca4-kr__CaM_Ca4__CaMKII*CaMKIIc
    ReactionFlux19 =  Ca*CaMKII_CaM*kf__CaMKII_CaM__Ca-kr__CaMKII_CaM__Ca*CaMKII_CaM_Ca1
    ReactionFlux20 =  Ca*kf__CaMKII_CaM_Ca1__Ca*CaMKII_CaM_Ca1-CaMKII_CaM_Ca2*kr__CaMKII_CaM_Ca1__Ca
    ReactionFlux21 = -kr__CaMKII_CaM_Ca2__Ca*CaMKII_CaM_Ca3+CaMKII_CaM_Ca2*kf__CaMKII_CaM_Ca2__Ca*Ca
    ReactionFlux22 =  Ca*CaMKII_CaM_Ca3*kf__CaMKII_CaM_Ca3__Ca-kr__CaMKII_CaM_Ca3__Ca*CaMKIIc
    ReactionFlux23 =  kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut*CaM_Ca4-pCaMKII*kr__CaM_Ca4__pCaMKIIaut
    ReactionFlux24 =  kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3*pCaMKIIaut-kr__CaM_Ca3__pCaMKIIaut*pCaMKII_Ca3
    ReactionFlux25 =  kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2*pCaMKIIaut-pCaMKII_Ca2*kr__CaM_Ca2__pCaMKIIaut
    ReactionFlux26 = -kr__CaM_Ca1__pCaMKIIaut*pCaMKII_Ca1+pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    ReactionFlux27 = -pCaMKII_Ca0*kr__CaM__pCaMKIIaut+CaM*pCaMKIIaut*kf__CaM__pCaMKIIaut
    ReactionFlux28 =  Ca*kf__pCaMKII_Ca0__Ca*pCaMKII_Ca0-kr__pCaMKII_Ca0__Ca*pCaMKII_Ca1
    ReactionFlux29 = -pCaMKII_Ca2*kr__pCaMKII_Ca1__Ca+kf__pCaMKII_Ca1__Ca*pCaMKII_Ca1*Ca
    ReactionFlux30 = -kr__pCaMKII_Ca2__Ca*pCaMKII_Ca3+pCaMKII_Ca2*Ca*kf__pCaMKII_Ca2__Ca
    ReactionFlux31 = -kr__pCaMKII_Ca3__Ca*pCaMKII+kf__pCaMKII_Ca3__Ca*Ca*pCaMKII_Ca3
    ReactionFlux32 = kp__pairedCaMKIIc__CaMKIIc*CaMKIIc*pairedCaMKIIc
    ReactionFlux33 =  pCaMKIIaut*PP1*kf__PP1__pCaMKIIaut-PP1__pCaMKIIaut*kr__PP1__pCaMKIIaut
    ReactionFlux34 = PP1__pCaMKIIaut*kcat__PP1__pCaMKIIaut

    return 1.0/( PP2B_CaM_Ca3+PP2B_CaM+PP2Bc+PP2B_CaM_Ca1+PP2B_CaM_Ca2+PP2B+s)*( PP2B_CaM_Ca3+PP2B_CaM+PP2Bc+PP2B_CaM_Ca1+PP2B_CaM_Ca2)

#
# User function: ActivePP2BPercentage
#

def ActivePP2BPercentage(y_, t_, p_):
    """
    The user-defined function "ActivePP2BPercentage" for the vector field "CaMKIIs"
    Arguments:
        y_ :  vector of the state variables:
                  y_[0] is CaM_Ca1
                  y_[1] is CaM_Ca2
                  y_[2] is CaM_Ca3
                  y_[3] is CaM_Ca4
                  y_[4] is PP2B_CaM
                  y_[5] is PP2B_CaM_Ca1
                  y_[6] is PP2B_CaM_Ca2
                  y_[7] is PP2B_CaM_Ca3
                  y_[8] is PP2Bc
                  y_[9] is CaMKII_CaM
                  y_[10] is CaMKII_CaM_Ca1
                  y_[11] is CaMKII_CaM_Ca2
                  y_[12] is CaMKII_CaM_Ca3
                  y_[13] is CaMKIIc
                  y_[14] is pCaMKII
                  y_[15] is pCaMKIIaut
                  y_[16] is pCaMKII_Ca3
                  y_[17] is pCaMKII_Ca2
                  y_[18] is pCaMKII_Ca1
                  y_[19] is pCaMKII_Ca0
                  y_[20] is PP1__pCaMKIIaut
        t_ :  time
        p_ :  vector of the parameters
                  p_[0] is kf__CaM__Ca
                  p_[1] is kf__CaM_Ca1__Ca
                  p_[2] is kf__CaM_Ca2__Ca
                  p_[3] is kf__CaM_Ca3__Ca
                  p_[4] is kf__CaM__PP2B
                  p_[5] is kf__CaM_Ca1__PP2B
                  p_[6] is kf__CaM_Ca2__PP2B
                  p_[7] is kf__CaM_Ca3__PP2B
                  p_[8] is kf__CaM_Ca4__PP2B
                  p_[9] is kf__PP2B_CaM__Ca
                  p_[10] is kf__PP2B_CaM_Ca1__Ca
                  p_[11] is kf__PP2B_CaM_Ca2__Ca
                  p_[12] is kf__PP2B_CaM_Ca3__Ca
                  p_[13] is KD__CaM_Ca3__Ca
                  p_[14] is KD__CaM_Ca2__Ca
                  p_[15] is KD__CaM_Ca1__Ca
                  p_[16] is KD__CaM__Ca
                  p_[17] is KD__CaM_Ca4__PP2B
                  p_[18] is KD__PP2B_CaM_Ca3__Ca
                  p_[19] is KD__PP2B_CaM_Ca2__Ca
                  p_[20] is KD__PP2B_CaM_Ca1__Ca
                  p_[21] is KD__PP2B_CaM__Ca
                  p_[22] is kf__CaM__CaMKII
                  p_[23] is kf__CaMKII_CaM_Ca3__Ca
                  p_[24] is kf__CaMKII_CaM_Ca2__Ca
                  p_[25] is kf__CaMKII_CaM_Ca1__Ca
                  p_[26] is kf__CaMKII_CaM__Ca
                  p_[27] is kf__CaM_Ca1__CaMKII
                  p_[28] is kf__CaM_Ca2__CaMKII
                  p_[29] is kf__CaM_Ca3__CaMKII
                  p_[30] is kf__CaM_Ca4__CaMKII
                  p_[31] is KD__CaM_Ca4__CaMKII
                  p_[32] is KD__CaMKII_CaM_Ca3__Ca
                  p_[33] is KD__CaMKII_CaM_Ca2__Ca
                  p_[34] is KD__CaMKII_CaM_Ca1__Ca
                  p_[35] is KD__CaMKII_CaM__Ca
                  p_[36] is kf__pCaMKII_Ca3__Ca
                  p_[37] is kf__CaM__pCaMKIIaut
                  p_[38] is kf__CaM_Ca1__pCaMKIIaut
                  p_[39] is kf__CaM_Ca2__pCaMKIIaut
                  p_[40] is kf__CaM_Ca3__pCaMKIIaut
                  p_[41] is kf__pCaMKII_Ca2__Ca
                  p_[42] is kf__pCaMKII_Ca1__Ca
                  p_[43] is kf__CaM_Ca4__pCaMKIIaut
                  p_[44] is kf__pCaMKII_Ca0__Ca
                  p_[45] is KD__pCaMKII_Ca3__Ca
                  p_[46] is KD__pCaMKII_Ca2__Ca
                  p_[47] is KD__pCaMKII_Ca1__Ca
                  p_[48] is KD__pCaMKII_Ca0__Ca
                  p_[49] is KD__CaM_Ca4__pCaMKIIaut
                  p_[50] is kp__pairedCaMKIIc__CaMKIIc
                  p_[51] is kf__PP1__pCaMKIIaut
                  p_[52] is kr__PP1__pCaMKIIaut
                  p_[53] is kcat__PP1__pCaMKIIaut
                  p_[54] is Ca_set
                  p_[55] is PP1_0
                  p_[56] is CaMKII_0
                  p_[57] is CaM_0
                  p_[58] is PP2B_0
    """
    s = 1.0000000000000001e-05;
    a = 3.9026399999999999e+00;
    b = 2.8697200000000000e+00;
    CaM_Ca1    = y_[0]
    CaM_Ca2    = y_[1]
    CaM_Ca3    = y_[2]
    CaM_Ca4    = y_[3]
    PP2B_CaM   = y_[4]
    PP2B_CaM_Ca1 = y_[5]
    PP2B_CaM_Ca2 = y_[6]
    PP2B_CaM_Ca3 = y_[7]
    PP2Bc      = y_[8]
    CaMKII_CaM = y_[9]
    CaMKII_CaM_Ca1 = y_[10]
    CaMKII_CaM_Ca2 = y_[11]
    CaMKII_CaM_Ca3 = y_[12]
    CaMKIIc    = y_[13]
    pCaMKII    = y_[14]
    pCaMKIIaut = y_[15]
    pCaMKII_Ca3 = y_[16]
    pCaMKII_Ca2 = y_[17]
    pCaMKII_Ca1 = y_[18]
    pCaMKII_Ca0 = y_[19]
    PP1__pCaMKIIaut = y_[20]

    kf__CaM__Ca = p_[0]
    kf__CaM_Ca1__Ca = p_[1]
    kf__CaM_Ca2__Ca = p_[2]
    kf__CaM_Ca3__Ca = p_[3]
    kf__CaM__PP2B = p_[4]
    kf__CaM_Ca1__PP2B = p_[5]
    kf__CaM_Ca2__PP2B = p_[6]
    kf__CaM_Ca3__PP2B = p_[7]
    kf__CaM_Ca4__PP2B = p_[8]
    kf__PP2B_CaM__Ca = p_[9]
    kf__PP2B_CaM_Ca1__Ca = p_[10]
    kf__PP2B_CaM_Ca2__Ca = p_[11]
    kf__PP2B_CaM_Ca3__Ca = p_[12]
    KD__CaM_Ca3__Ca = p_[13]
    KD__CaM_Ca2__Ca = p_[14]
    KD__CaM_Ca1__Ca = p_[15]
    KD__CaM__Ca = p_[16]
    KD__CaM_Ca4__PP2B = p_[17]
    KD__PP2B_CaM_Ca3__Ca = p_[18]
    KD__PP2B_CaM_Ca2__Ca = p_[19]
    KD__PP2B_CaM_Ca1__Ca = p_[20]
    KD__PP2B_CaM__Ca = p_[21]
    kf__CaM__CaMKII = p_[22]
    kf__CaMKII_CaM_Ca3__Ca = p_[23]
    kf__CaMKII_CaM_Ca2__Ca = p_[24]
    kf__CaMKII_CaM_Ca1__Ca = p_[25]
    kf__CaMKII_CaM__Ca = p_[26]
    kf__CaM_Ca1__CaMKII = p_[27]
    kf__CaM_Ca2__CaMKII = p_[28]
    kf__CaM_Ca3__CaMKII = p_[29]
    kf__CaM_Ca4__CaMKII = p_[30]
    KD__CaM_Ca4__CaMKII = p_[31]
    KD__CaMKII_CaM_Ca3__Ca = p_[32]
    KD__CaMKII_CaM_Ca2__Ca = p_[33]
    KD__CaMKII_CaM_Ca1__Ca = p_[34]
    KD__CaMKII_CaM__Ca = p_[35]
    kf__pCaMKII_Ca3__Ca = p_[36]
    kf__CaM__pCaMKIIaut = p_[37]
    kf__CaM_Ca1__pCaMKIIaut = p_[38]
    kf__CaM_Ca2__pCaMKIIaut = p_[39]
    kf__CaM_Ca3__pCaMKIIaut = p_[40]
    kf__pCaMKII_Ca2__Ca = p_[41]
    kf__pCaMKII_Ca1__Ca = p_[42]
    kf__CaM_Ca4__pCaMKIIaut = p_[43]
    kf__pCaMKII_Ca0__Ca = p_[44]
    KD__pCaMKII_Ca3__Ca = p_[45]
    KD__pCaMKII_Ca2__Ca = p_[46]
    KD__pCaMKII_Ca1__Ca = p_[47]
    KD__pCaMKII_Ca0__Ca = p_[48]
    KD__CaM_Ca4__pCaMKIIaut = p_[49]
    kp__pairedCaMKIIc__CaMKIIc = p_[50]
    kf__PP1__pCaMKIIaut = p_[51]
    kr__PP1__pCaMKIIaut = p_[52]
    kcat__PP1__pCaMKIIaut = p_[53]
    Ca_set     = p_[54]
    PP1_0      = p_[55]
    CaMKII_0   = p_[56]
    CaM_0      = p_[57]
    PP2B_0     = p_[58]

    KD__CaM_Ca3__PP2B = KD__CaM_Ca4__PP2B/KD__PP2B_CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__PP2B = KD__CaM_Ca2__Ca*KD__CaM_Ca3__PP2B/KD__PP2B_CaM_Ca2__Ca
    KD__CaM_Ca1__PP2B = 1.0/KD__PP2B_CaM_Ca1__Ca*KD__CaM_Ca1__Ca*KD__CaM_Ca2__PP2B
    KD__CaM__PP2B = 1.0/KD__PP2B_CaM__Ca*KD__CaM__Ca*KD__CaM_Ca1__PP2B
    KD__CaM_Ca3__CaMKII = KD__CaM_Ca4__CaMKII*KD__CaM_Ca3__Ca/KD__CaMKII_CaM_Ca3__Ca
    KD__CaM_Ca2__CaMKII = KD__CaM_Ca2__Ca/KD__CaMKII_CaM_Ca2__Ca*KD__CaM_Ca3__CaMKII
    KD__CaM_Ca1__CaMKII = KD__CaM_Ca1__Ca/KD__CaMKII_CaM_Ca1__Ca*KD__CaM_Ca2__CaMKII
    KD__CaM__CaMKII = KD__CaM_Ca1__CaMKII*KD__CaM__Ca/KD__CaMKII_CaM__Ca
    KD__CaM_Ca3__pCaMKIIaut = 1.0/KD__pCaMKII_Ca3__Ca*KD__CaM_Ca4__pCaMKIIaut*KD__CaM_Ca3__Ca
    KD__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__Ca/KD__pCaMKII_Ca2__Ca*KD__CaM_Ca3__pCaMKIIaut
    KD__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*KD__CaM_Ca1__Ca/KD__pCaMKII_Ca1__Ca
    KD__CaM__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*KD__CaM__Ca/KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca3__Ca = kf__CaM_Ca3__Ca*KD__CaM_Ca3__Ca
    kr__CaM_Ca2__Ca = KD__CaM_Ca2__Ca*kf__CaM_Ca2__Ca
    kr__CaM_Ca1__Ca = kf__CaM_Ca1__Ca*KD__CaM_Ca1__Ca
    kr__CaM__Ca = KD__CaM__Ca*kf__CaM__Ca
    kr__CaM_Ca4__PP2B = KD__CaM_Ca4__PP2B*kf__CaM_Ca4__PP2B
    kr__CaM_Ca3__PP2B = kf__CaM_Ca3__PP2B*KD__CaM_Ca3__PP2B
    kr__CaM_Ca2__PP2B = KD__CaM_Ca2__PP2B*kf__CaM_Ca2__PP2B
    kr__CaM_Ca1__PP2B = kf__CaM_Ca1__PP2B*KD__CaM_Ca1__PP2B
    kr__CaM__PP2B = kf__CaM__PP2B*KD__CaM__PP2B
    kr__PP2B_CaM_Ca3__Ca = KD__PP2B_CaM_Ca3__Ca*kf__PP2B_CaM_Ca3__Ca
    kr__PP2B_CaM_Ca2__Ca = kf__PP2B_CaM_Ca2__Ca*KD__PP2B_CaM_Ca2__Ca
    kr__PP2B_CaM_Ca1__Ca = KD__PP2B_CaM_Ca1__Ca*kf__PP2B_CaM_Ca1__Ca
    kr__PP2B_CaM__Ca = KD__PP2B_CaM__Ca*kf__PP2B_CaM__Ca
    kr__CaM_Ca4__CaMKII = kf__CaM_Ca4__CaMKII*KD__CaM_Ca4__CaMKII
    kr__CaM_Ca3__CaMKII = kf__CaM_Ca3__CaMKII*KD__CaM_Ca3__CaMKII
    kr__CaM_Ca2__CaMKII = kf__CaM_Ca2__CaMKII*KD__CaM_Ca2__CaMKII
    kr__CaM_Ca1__CaMKII = KD__CaM_Ca1__CaMKII*kf__CaM_Ca1__CaMKII
    kr__CaM__CaMKII = KD__CaM__CaMKII*kf__CaM__CaMKII
    kr__CaMKII_CaM_Ca3__Ca = kf__CaMKII_CaM_Ca3__Ca*KD__CaMKII_CaM_Ca3__Ca
    kr__CaMKII_CaM_Ca2__Ca = kf__CaMKII_CaM_Ca2__Ca*KD__CaMKII_CaM_Ca2__Ca
    kr__CaMKII_CaM_Ca1__Ca = kf__CaMKII_CaM_Ca1__Ca*KD__CaMKII_CaM_Ca1__Ca
    kr__CaMKII_CaM__Ca = kf__CaMKII_CaM__Ca*KD__CaMKII_CaM__Ca
    kr__pCaMKII_Ca3__Ca = KD__pCaMKII_Ca3__Ca*kf__pCaMKII_Ca3__Ca
    kr__pCaMKII_Ca2__Ca = KD__pCaMKII_Ca2__Ca*kf__pCaMKII_Ca2__Ca
    kr__pCaMKII_Ca1__Ca = kf__pCaMKII_Ca1__Ca*KD__pCaMKII_Ca1__Ca
    kr__pCaMKII_Ca0__Ca = kf__pCaMKII_Ca0__Ca*KD__pCaMKII_Ca0__Ca
    kr__CaM_Ca4__pCaMKIIaut = KD__CaM_Ca4__pCaMKIIaut*kf__CaM_Ca4__pCaMKIIaut
    kr__CaM_Ca3__pCaMKIIaut = kf__CaM_Ca3__pCaMKIIaut*KD__CaM_Ca3__pCaMKIIaut
    kr__CaM_Ca2__pCaMKIIaut = KD__CaM_Ca2__pCaMKIIaut*kf__CaM_Ca2__pCaMKIIaut
    kr__CaM_Ca1__pCaMKIIaut = KD__CaM_Ca1__pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut
    kr__CaM__pCaMKIIaut = kf__CaM__pCaMKIIaut*KD__CaM__pCaMKIIaut
    logistic = 1.0/( exp(-10.0*t)+1.0)
    Ca = logistic*Ca_set
    PP1 = -PP1__pCaMKIIaut+PP1_0
    CaMKII = -PP1_0-pCaMKII_Ca2-pCaMKII-CaMKII_CaM_Ca2+CaMKII_0-pCaMKII_Ca1-pCaMKIIaut-CaMKII_CaM_Ca3-CaMKII_CaM-pCaMKII_Ca0-pCaMKII_Ca3+PP1-CaMKIIc-CaMKII_CaM_Ca1
    CaM = -PP2B_CaM_Ca3+PP1_0-PP2B_CaM+CaMKII-CaM_Ca2-PP2Bc-CaMKII_0-PP2B_CaM_Ca1-CaM_Ca3+pCaMKIIaut+CaM_0-PP2B_CaM_Ca2-CaM_Ca4-PP1-CaM_Ca1
    PP2B =  PP2B_0-PP2B_CaM_Ca3-PP2B_CaM-PP2Bc-PP2B_CaM_Ca1-PP2B_CaM_Ca2
    totalCaMKII =  pCaMKII_Ca2+CaMKII+pCaMKII+CaMKII_CaM_Ca2+pCaMKII_Ca1+pCaMKIIaut+CaMKII_CaM_Ca3+CaMKII_CaM+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc+CaMKII_CaM_Ca1
    ActiveCaMKII =  pCaMKII_Ca2+pCaMKII+pCaMKII_Ca1+pCaMKIIaut+pCaMKII_Ca0+pCaMKII_Ca3+CaMKIIc
    r = 1.0/( totalCaMKII+s)*( pCaMKII+CaMKIIc)
    pairedCaMKIIc = 1.0/( b*r+1.0)*a*(r*r)
    ReactionFlux1 = -kr__CaM__Ca*CaM_Ca1+CaM*Ca*kf__CaM__Ca
    ReactionFlux2 = -CaM_Ca2*kr__CaM_Ca1__Ca+kf__CaM_Ca1__Ca*Ca*CaM_Ca1
    ReactionFlux3 =  CaM_Ca2*kf__CaM_Ca2__Ca*Ca-CaM_Ca3*kr__CaM_Ca2__Ca
    ReactionFlux4 = -kr__CaM_Ca3__Ca*CaM_Ca4+CaM_Ca3*Ca*kf__CaM_Ca3__Ca
    ReactionFlux5 =  kf__CaM__PP2B*CaM*PP2B-PP2B_CaM*kr__CaM__PP2B
    ReactionFlux6 = -PP2B_CaM_Ca1*kr__CaM_Ca1__PP2B+kf__CaM_Ca1__PP2B*PP2B*CaM_Ca1
    ReactionFlux7 =  CaM_Ca2*kf__CaM_Ca2__PP2B*PP2B-kr__CaM_Ca2__PP2B*PP2B_CaM_Ca2
    ReactionFlux8 = -PP2B_CaM_Ca3*kr__CaM_Ca3__PP2B+kf__CaM_Ca3__PP2B*CaM_Ca3*PP2B
    ReactionFlux9 = -PP2Bc*kr__CaM_Ca4__PP2B+kf__CaM_Ca4__PP2B*PP2B*CaM_Ca4
    ReactionFlux10 =  PP2B_CaM*Ca*kf__PP2B_CaM__Ca-PP2B_CaM_Ca1*kr__PP2B_CaM__Ca
    ReactionFlux11 =  PP2B_CaM_Ca1*Ca*kf__PP2B_CaM_Ca1__Ca-kr__PP2B_CaM_Ca1__Ca*PP2B_CaM_Ca2
    ReactionFlux12 = -PP2B_CaM_Ca3*kr__PP2B_CaM_Ca2__Ca+kf__PP2B_CaM_Ca2__Ca*Ca*PP2B_CaM_Ca2
    ReactionFlux13 =  PP2B_CaM_Ca3*Ca*kf__PP2B_CaM_Ca3__Ca-kr__PP2B_CaM_Ca3__Ca*PP2Bc
    ReactionFlux14 = -kr__CaM__CaMKII*CaMKII_CaM+CaMKII*CaM*kf__CaM__CaMKII
    ReactionFlux15 = -kr__CaM_Ca1__CaMKII*CaMKII_CaM_Ca1+CaMKII*kf__CaM_Ca1__CaMKII*CaM_Ca1
    ReactionFlux16 =  CaMKII*CaM_Ca2*kf__CaM_Ca2__CaMKII-CaMKII_CaM_Ca2*kr__CaM_Ca2__CaMKII
    ReactionFlux17 = -CaMKII_CaM_Ca3*kr__CaM_Ca3__CaMKII+kf__CaM_Ca3__CaMKII*CaMKII*CaM_Ca3
    ReactionFlux18 =  CaMKII*kf__CaM_Ca4__CaMKII*CaM_Ca4-kr__CaM_Ca4__CaMKII*CaMKIIc
    ReactionFlux19 =  Ca*CaMKII_CaM*kf__CaMKII_CaM__Ca-kr__CaMKII_CaM__Ca*CaMKII_CaM_Ca1
    ReactionFlux20 =  Ca*kf__CaMKII_CaM_Ca1__Ca*CaMKII_CaM_Ca1-CaMKII_CaM_Ca2*kr__CaMKII_CaM_Ca1__Ca
    ReactionFlux21 = -kr__CaMKII_CaM_Ca2__Ca*CaMKII_CaM_Ca3+CaMKII_CaM_Ca2*kf__CaMKII_CaM_Ca2__Ca*Ca
    ReactionFlux22 =  Ca*CaMKII_CaM_Ca3*kf__CaMKII_CaM_Ca3__Ca-kr__CaMKII_CaM_Ca3__Ca*CaMKIIc
    ReactionFlux23 =  kf__CaM_Ca4__pCaMKIIaut*pCaMKIIaut*CaM_Ca4-pCaMKII*kr__CaM_Ca4__pCaMKIIaut
    ReactionFlux24 =  kf__CaM_Ca3__pCaMKIIaut*CaM_Ca3*pCaMKIIaut-kr__CaM_Ca3__pCaMKIIaut*pCaMKII_Ca3
    ReactionFlux25 =  kf__CaM_Ca2__pCaMKIIaut*CaM_Ca2*pCaMKIIaut-pCaMKII_Ca2*kr__CaM_Ca2__pCaMKIIaut
    ReactionFlux26 = -kr__CaM_Ca1__pCaMKIIaut*pCaMKII_Ca1+pCaMKIIaut*kf__CaM_Ca1__pCaMKIIaut*CaM_Ca1
    ReactionFlux27 = -pCaMKII_Ca0*kr__CaM__pCaMKIIaut+CaM*pCaMKIIaut*kf__CaM__pCaMKIIaut
    ReactionFlux28 =  Ca*kf__pCaMKII_Ca0__Ca*pCaMKII_Ca0-kr__pCaMKII_Ca0__Ca*pCaMKII_Ca1
    ReactionFlux29 = -pCaMKII_Ca2*kr__pCaMKII_Ca1__Ca+kf__pCaMKII_Ca1__Ca*pCaMKII_Ca1*Ca
    ReactionFlux30 = -kr__pCaMKII_Ca2__Ca*pCaMKII_Ca3+pCaMKII_Ca2*Ca*kf__pCaMKII_Ca2__Ca
    ReactionFlux31 = -kr__pCaMKII_Ca3__Ca*pCaMKII+kf__pCaMKII_Ca3__Ca*Ca*pCaMKII_Ca3
    ReactionFlux32 = kp__pairedCaMKIIc__CaMKIIc*CaMKIIc*pairedCaMKIIc
    ReactionFlux33 =  pCaMKIIaut*PP1*kf__PP1__pCaMKIIaut-PP1__pCaMKIIaut*kr__PP1__pCaMKIIaut
    ReactionFlux34 = PP1__pCaMKIIaut*kcat__PP1__pCaMKIIaut

    return 100.0*PP2Bc/( PP2B_CaM_Ca3+PP2B_CaM+PP2Bc+PP2B_CaM_Ca1+PP2B_CaM_Ca2+PP2B+s)
